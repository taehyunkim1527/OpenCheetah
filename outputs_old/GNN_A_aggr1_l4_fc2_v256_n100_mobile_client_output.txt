Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997751
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 25600 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.15
1024 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.704
Truncate #1 on 256 points by 12 bits
Time in sec for current matmul = 0.147
102400 => -36189307160
[31mMatMul Output Mismatch[0m
Relu #3 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.704
Time in sec for current matmul = 0.146
-512 => 63328217424
[31mMatMul Output Mismatch[0m
Relu #5 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.704
Truncate #2 on 256 points by 12 bits
Time in sec for current matmul = 0.146
7916129582 => -37629106806
[31mMatMul Output Mismatch[0m
Relu #7 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.704
Time in sec for current matmul = 0.151
-512 => 51373873276
[31mMatMul Output Mismatch[0m
Relu #9 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.704
Truncate #3 on 256 points by 12 bits
Time in sec for current matmul = 0.147
6421836562 => 16811925674
[31mMatMul Output Mismatch[0m
Relu #11 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.704
Time in sec for current matmul = 0.146
2101491226 => -27535418334
[31mMatMul Output Mismatch[0m
Relu #13 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.704
Truncate #4 on 256 points by 12 bits
Time in sec for current matmul = 0.146
101376 => -14548523184
[31mMatMul Output Mismatch[0m
Relu #15 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.704
Time in sec for current matmul = 0.145
-512 => 58198358401
[31mMatMul Output Mismatch[0m
Relu #17 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.704
Thread i = 0, total data sent till now = 5566195
Thread i = 1, total data sent till now = 1765519
Thread i = 2, total data sent till now = 1736223
Thread i = 3, total data sent till now = 1765519
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 13042665 microseconds.
Total data sent = 3.48755 MiB.
Number of rounds = 211
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 1.324 seconds.
Total time in BatchNorm = 0.521 seconds.
Total time in Truncation = 4.216 seconds.
Total time in Relu = 6.336 seconds.
Total time in MaxPool = 0 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 2.14335 MiB.
BatchNorm data sent = 1.25027 MiB.
Truncation data sent = 0.0302124 MiB.
Relu data sent = 0.0637207 MiB.
Maxpool data sent = 0 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
14208585
14208584
14208584
14208584
14208584
14208585
14208584
14208584
14208584
14208585
14208585
14208584
14208584
14208585
14208585
14208585
14208584
14208585
14208584
14208585
14208584
14208585
14208584
14208584
14208584
14208585
14208584
14208585
14208584
14208584
14208584
14208585
14208584
14208585
14208585
14208585
14208585
14208585
14208585
14208584
14208585
14208584
14208585
14208585
14208584
14208585
14208585
14208585
14208584
14208585
14208584
14208584
14208585
14208585
14208585
14208585
14208585
14208584
14208585
14208584
14208585
14208585
14208585
14208584
14208585
14208585
14208584
14208585
14208584
14208584
14208584
14208584
14208584
14208585
14208585
14208585
14208585
14208585
14208584
14208584
14208584
14208585
14208585
14208585
14208584
14208584
14208585
14208585
14208585
14208585
14208585
14208585
14208585
14208585
14208585
14208585
14208585
14208585
14208585
14208585
14208585
14208584
14208585
14208585
14208585
14208585
14208584
14208585
14208585
14208585
14208584
14208584
14208584
14208585
14208585
14208585
14208585
14208585
14208585
14208585
14208585
14208585
14208585
14208584
14208585
14208584
14208585
14208585
14208585
14208584
14208585
14208585
14208584
14208584
14208584
14208585
14208585
14208585
14208585
14208584
14208584
14208585
14208585
14208585
14208585
14208584
14208585
14208585
14208585
14208585
14208585
14208584
14208585
14208584
14208585
14208584
14208584
14208585
14208584
14208585
14208584
14208584
14208585
14208584
14208585
14208585
14208585
14208585
14208585
14208585
14208584
14208585
14208585
14208585
14208585
14208584
14208585
14208585
14208585
14208584
14208585
14208585
14208585
14208584
14208584
14208585
14208585
14208585
14208585
14208585
14208585
14208585
14208585
14208585
14208584
14208584
14208585
14208584
14208584
14208584
14208584
14208585
14208584
14208585
14208585
14208585
14208585
14208584
14208584
14208584
14208584
14208585
14208584
14208585
14208585
14208585
14208585
14208585
14208584
14208584
14208585
14208585
14208585
14208584
14208584
14208584
14208584
14208584
14208585
14208585
14208585
14208585
14208584
14208584
14208584
14208585
14208584
14208585
14208585
14208585
14208585
14208585
14208584
14208585
14208584
14208584
14208585
14208584
14208585
14208585
14208584
14208585
14208585
14208585
14208585
14208584

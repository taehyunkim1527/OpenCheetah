Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997743
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 1280 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.01
512 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.001
Truncate #1 on 128 points by 12 bits
Time in sec for current matmul = 0.013
5120 => -14225754836
[31mMatMul Output Mismatch[0m
Relu #3 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.001
Time in sec for current matmul = 0.013
-256 => 46309525102
[31mMatMul Output Mismatch[0m
Relu #5 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.001
Truncate #2 on 128 points by 12 bits
Time in sec for current matmul = 0.012
2894350438 => 36651415314
[31mMatMul Output Mismatch[0m
Relu #7 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.001
Time in sec for current matmul = 0.013
2290713710 => 34444331644
[31mMatMul Output Mismatch[0m
Relu #9 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.001
Truncate #3 on 128 points by 12 bits
Time in sec for current matmul = 0.013
2152775856 => -26305896066
[31mMatMul Output Mismatch[0m
Relu #11 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.001
Time in sec for current matmul = 0.011
-256 => -20340840770
[31mMatMul Output Mismatch[0m
Relu #13 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.001
Truncate #4 on 128 points by 12 bits
Time in sec for current matmul = 0.012
4608 => 36460150750
[31mMatMul Output Mismatch[0m
Relu #15 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.001
Time in sec for current matmul = 0.014
2278759678 => 41497881892
[31mMatMul Output Mismatch[0m
Relu #17 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.001
Thread i = 0, total data sent till now = 3313867
Thread i = 1, total data sent till now = 1746339
Thread i = 2, total data sent till now = 1731411
Thread i = 3, total data sent till now = 1746339
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 151454 microseconds.
Total data sent = 1.2984 MiB.
Number of rounds = 211
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 0.111 seconds.
Total time in BatchNorm = 0.01 seconds.
Total time in Truncation = 0.004 seconds.
Total time in Relu = 0.009 seconds.
Total time in MaxPool = 0 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 1.07162 MiB.
BatchNorm data sent = 0.178612 MiB.
Truncation data sent = 0.015625 MiB.
Relu data sent = 0.032547 MiB.
Maxpool data sent = 0 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
10131320
10131320
10131320
10131320
10131320
10131320
10131320
10131319
10131320
10131320
10131320
10131320
10131320
10131319
10131320
10131319
10131319
10131320
10131319
10131320
10131320
10131319
10131320
10131320
10131320
10131320
10131320
10131320
10131320
10131320
10131320
10131320
10131319
10131320
10131319
10131320
10131320
10131320
10131320
10131320
10131319
10131320
10131320
10131319
10131319
10131320
10131320
10131320
10131320
10131320
10131320
10131320
10131320
10131320
10131319
10131320
10131320
10131320
10131320
10131320
10131319
10131320
10131320
10131320
10131320
10131320
10131320
10131320
10131320
10131320
10131320
10131320
10131320
10131320
10131320
10131320
10131320
10131319
10131320
10131319
10131320
10131320
10131320
10131319
10131320
10131319
10131320
10131320
10131320
10131320
10131319
10131319
10131320
10131319
10131320
10131320
10131320
10131320
10131320
10131320
10131320
10131320
10131320
10131319
10131320
10131320
10131320
10131320
10131320
10131320
10131320
10131320
10131319
10131320
10131320
10131320
10131320
10131319
10131320
10131320
10131320
10131320
10131320
10131320
10131319
10131319
10131320
10131320

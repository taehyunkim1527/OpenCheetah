Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997727
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 768 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.015
1024 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.002
Truncate #1 on 256 points by 12 bits
Time in sec for current matmul = 0.021
3072 => -46203796904
[31mMatMul Output Mismatch[0m
Relu #3 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.002
Time in sec for current matmul = 0.019
-512 => 40769255925
[31mMatMul Output Mismatch[0m
Relu #5 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.002
Truncate #2 on 256 points by 12 bits
Time in sec for current matmul = 0.019
5096160060 => 68187571228
[31mMatMul Output Mismatch[0m
Relu #7 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.002
Time in sec for current matmul = 0.02
8523446930 => 22814468324
[31mMatMul Output Mismatch[0m
Relu #9 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.002
Truncate #3 on 256 points by 12 bits
Time in sec for current matmul = 0.02
2851811616 => 6961190216
[31mMatMul Output Mismatch[0m
Relu #11 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.002
Time in sec for current matmul = 0.018
870149270 => 25647889919
[31mMatMul Output Mismatch[0m
Relu #13 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.002
Thread i = 0, total data sent till now = 3940485
Thread i = 1, total data sent till now = 1756463
Thread i = 2, total data sent till now = 1733943
Thread i = 3, total data sent till now = 1756463
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 182097 microseconds.
Total data sent = 1.91773 MiB.
Number of rounds = 163
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 0.132 seconds.
Total time in BatchNorm = 0.01 seconds.
Total time in Truncation = 0.006 seconds.
Total time in Relu = 0.014 seconds.
Total time in MaxPool = 0 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 1.6668 MiB.
BatchNorm data sent = 0.178617 MiB.
Truncation data sent = 0.0227509 MiB.
Relu data sent = 0.0495605 MiB.
Maxpool data sent = 0 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
6261693
6261693
6261692
6261693
6261693
6261693
6261693
6261693
6261692
6261693
6261693
6261693
6261692
6261693
6261693
6261693
6261692
6261692
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261692
6261692
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261692
6261693
6261693
6261693
6261693
6261692
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261692
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261692
6261693
6261693
6261693
6261692
6261693
6261693
6261693
6261692
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261692
6261693
6261693
6261693
6261693
6261693
6261692
6261693
6261693
6261693
6261693
6261692
6261693
6261693
6261693
6261693
6261693
6261693
6261692
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261692
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261692
6261692
6261693
6261693
6261693
6261693
6261692
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261692
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261692
6261693
6261693
6261693
6261692
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261692
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261692
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261692
6261693
6261693
6261693
6261692
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261692
6261693
6261693
6261693
6261693
6261693
6261693
6261693
6261692
6261693
6261693
6261693

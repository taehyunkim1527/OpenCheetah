Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997763
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 768 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.145
1024 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.704
Truncate #1 on 768 points by 12 bits
HomBN #2 via element-wise mult on 768 points
[31m2 ==> -60027299148[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #2 on 256 points by 12 bits
Time in sec for current matmul = 0.147
337013040 => -60269291810
[31mMatMul Output Mismatch[0m
Relu #3 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.704
Time in sec for current matmul = 0.145
-512 => -38304742691
[31mMatMul Output Mismatch[0m
Relu #5 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.704
Truncate #3 on 768 points by 12 bits
HomBN #3 via element-wise mult on 768 points
[31m2 ==> 63788554932[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #4 on 256 points by 12 bits
Time in sec for current matmul = 0.147
147252548 => -16135927210
[31mMatMul Output Mismatch[0m
Relu #7 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.704
Time in sec for current matmul = 0.148
-512 => -52171215462
[31mMatMul Output Mismatch[0m
Relu #9 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.704
Truncate #5 on 768 points by 12 bits
HomBN #4 via element-wise mult on 768 points
[31m2 ==> 23254801076[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #6 on 256 points by 12 bits
Time in sec for current matmul = 0.145
-408492750 => 64440411256
[31mMatMul Output Mismatch[0m
Relu #11 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.704
Time in sec for current matmul = 0.146
8055051906 => 37123273308
[31mMatMul Output Mismatch[0m
Relu #13 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.704
Thread i = 0, total data sent till now = 4507501
Thread i = 1, total data sent till now = 1782815
Thread i = 2, total data sent till now = 1738959
Thread i = 3, total data sent till now = 1782815
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 11939361 microseconds.
Total data sent = 2.51349 MiB.
Number of rounds = 205
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 1.023 seconds.
Total time in BatchNorm = 0.521 seconds.
Total time in Truncation = 5.033 seconds.
Total time in Relu = 4.928 seconds.
Total time in MaxPool = 0 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 1.66695 MiB.
BatchNorm data sent = 0.714401 MiB.
Truncation data sent = 0.0825806 MiB.
Relu data sent = 0.0495605 MiB.
Maxpool data sent = 0 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
9063300
9063300
9063300
9063301
9063301
9063300
9063300
9063300
9063301
9063300
9063300
9063300
9063300
9063301
9063300
9063300
9063301
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063301
9063301
9063300
9063301
9063300
9063300
9063300
9063300
9063301
9063300
9063300
9063300
9063300
9063301
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063301
9063300
9063300
9063300
9063300
9063300
9063300
9063301
9063300
9063300
9063301
9063300
9063300
9063300
9063300
9063301
9063300
9063300
9063300
9063300
9063301
9063300
9063301
9063300
9063300
9063301
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063301
9063300
9063300
9063301
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063301
9063300
9063300
9063300
9063300
9063300
9063301
9063300
9063300
9063301
9063301
9063300
9063301
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063301
9063300
9063300
9063300
9063301
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063301
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063301
9063300
9063301
9063301
9063300
9063300
9063300
9063300
9063300
9063300
9063301
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063301
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063301
9063301
9063300
9063301
9063300
9063300
9063300
9063301
9063300
9063300
9063300
9063300
9063300
9063301
9063300
9063300
9063300
9063300
9063300
9063300
9063301
9063300
9063301
9063300
9063300
9063300
9063300
9063300
9063300
9063301
9063301
9063300
9063300
9063300
9063301
9063301
9063300
9063301
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063301
9063300
9063300
9063300
9063300
9063300
9063301
9063301
9063300
9063300
9063301
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063300
9063301
9063301
9063301
9063300
9063300
9063300
9063300
9063301
9063300

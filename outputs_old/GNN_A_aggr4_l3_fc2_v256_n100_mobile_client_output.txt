Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997774
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 25600 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.145
1024 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.704
Truncate #1 on 25600 points by 12 bits
HomBN #2 via element-wise mult on 25600 points
[31m2 ==> 7891188336[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #2 on 256 points by 12 bits
Time in sec for current matmul = 0.146
79557166 => 12243579204
[31mMatMul Output Mismatch[0m
Relu #3 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.704
Time in sec for current matmul = 0.146
1530447908 => -48835680742
[31mMatMul Output Mismatch[0m
Relu #5 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.704
Truncate #3 on 25600 points by 12 bits
HomBN #3 via element-wise mult on 25600 points
[31m2 ==> 5341051504[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #4 on 256 points by 12 bits
Time in sec for current matmul = 0.146
3960382 => 38988731003
[31mMatMul Output Mismatch[0m
Relu #7 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.704
Time in sec for current matmul = 0.145
4873591888 => 65999099945
[31mMatMul Output Mismatch[0m
Relu #9 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.704
Truncate #5 on 25600 points by 12 bits
HomBN #4 via element-wise mult on 25600 points
[31m2 ==> -30629299600[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #6 on 256 points by 12 bits
Time in sec for current matmul = 0.147
-152453864 => 1493427270
[31mMatMul Output Mismatch[0m
Relu #11 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.704
Time in sec for current matmul = 0.146
186678914 => 13845157026
[31mMatMul Output Mismatch[0m
Relu #13 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.704
Thread i = 0, total data sent till now = 9162569
Thread i = 1, total data sent till now = 2630207
Thread i = 2, total data sent till now = 1899591
Thread i = 3, total data sent till now = 2630207
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 14150508 microseconds.
Total data sent = 8.72236 MiB.
Number of rounds = 205
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 1.021 seconds.
Total time in BatchNorm = 1.986 seconds.
Total time in Truncation = 5.519 seconds.
Total time in Relu = 4.928 seconds.
Total time in MaxPool = 0 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 1.66681 MiB.
BatchNorm data sent = 5.00076 MiB.
Truncation data sent = 2.00523 MiB.
Relu data sent = 0.0495605 MiB.
Maxpool data sent = 0 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
3380166
3380167
3380166
3380166
3380166
3380166
3380166
3380166
3380167
3380166
3380167
3380166
3380166
3380166
3380166
3380166
3380166
3380167
3380167
3380167
3380166
3380166
3380166
3380166
3380166
3380166
3380166
3380166
3380167
3380166
3380166
3380166
3380166
3380166
3380166
3380166
3380167
3380167
3380166
3380166
3380166
3380166
3380166
3380166
3380166
3380166
3380166
3380166
3380166
3380167
3380166
3380166
3380167
3380167
3380167
3380167
3380167
3380166
3380167
3380166
3380166
3380166
3380166
3380167
3380166
3380166
3380167
3380166
3380167
3380166
3380166
3380167
3380166
3380166
3380166
3380166
3380166
3380166
3380167
3380166
3380166
3380167
3380166
3380166
3380166
3380166
3380166
3380166
3380166
3380166
3380167
3380167
3380167
3380166
3380166
3380166
3380166
3380166
3380166
3380166
3380166
3380166
3380166
3380166
3380166
3380166
3380167
3380167
3380166
3380166
3380166
3380166
3380167
3380166
3380166
3380166
3380166
3380167
3380166
3380167
3380167
3380167
3380166
3380166
3380166
3380166
3380167
3380167
3380166
3380166
3380166
3380166
3380167
3380166
3380166
3380166
3380167
3380166
3380166
3380166
3380167
3380166
3380167
3380166
3380166
3380166
3380167
3380166
3380166
3380166
3380166
3380166
3380166
3380167
3380166
3380166
3380166
3380166
3380166
3380166
3380166
3380167
3380166
3380166
3380167
3380166
3380166
3380166
3380167
3380166
3380166
3380166
3380166
3380166
3380167
3380166
3380167
3380167
3380166
3380166
3380166
3380166
3380166
3380167
3380166
3380166
3380167
3380167
3380166
3380166
3380166
3380166
3380166
3380166
3380167
3380166
3380167
3380166
3380166
3380167
3380166
3380166
3380166
3380166
3380167
3380166
3380167
3380167
3380167
3380166
3380166
3380166
3380166
3380167
3380167
3380167
3380167
3380166
3380166
3380166
3380167
3380167
3380166
3380166
3380166
3380166
3380166
3380166
3380166
3380167
3380166
3380166
3380166
3380166
3380166
3380167
3380166
3380166
3380166
3380166
3380166
3380166
3380166
3380166
3380166
3380166
3380167
3380166
3380166
3380166
3380166
3380166
3380166
3380167
3380166
3380166

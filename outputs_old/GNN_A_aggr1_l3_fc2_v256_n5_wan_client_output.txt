Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997789
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 1280 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.07
1024 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.284
Truncate #1 on 256 points by 12 bits
Time in sec for current matmul = 0.07
5120 => 56846377546
[31mMatMul Output Mismatch[0m
Relu #3 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.284
Time in sec for current matmul = 0.071
7105797690 => -45647648015
[31mMatMul Output Mismatch[0m
Relu #5 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.284
Truncate #2 on 256 points by 12 bits
Time in sec for current matmul = 0.068
4096 => 63999485759
[31mMatMul Output Mismatch[0m
Relu #7 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.284
Time in sec for current matmul = 0.069
7999936226 => -64324983012
[31mMatMul Output Mismatch[0m
Relu #9 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.284
Truncate #3 on 256 points by 12 bits
Time in sec for current matmul = 0.069
4096 => 32163017126
[31mMatMul Output Mismatch[0m
Relu #11 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.284
Time in sec for current matmul = 0.072
4020377656 => 37429025884
[31mMatMul Output Mismatch[0m
Relu #13 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.284
Thread i = 0, total data sent till now = 3940591
Thread i = 1, total data sent till now = 1756463
Thread i = 2, total data sent till now = 1733943
Thread i = 3, total data sent till now = 1756463
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 3905073 microseconds.
Total data sent = 1.91777 MiB.
Number of rounds = 163
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 0.489 seconds.
Total time in BatchNorm = 0.056 seconds.
Total time in Truncation = 1.292 seconds.
Total time in Relu = 1.988 seconds.
Total time in MaxPool = 0 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 1.66688 MiB.
BatchNorm data sent = 0.178583 MiB.
Truncation data sent = 0.0227509 MiB.
Relu data sent = 0.0495605 MiB.
Maxpool data sent = 0 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
9137947
9137946
9137946
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137946
9137946
9137946
9137947
9137947
9137946
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137946
9137947
9137947
9137946
9137947
9137947
9137947
9137946
9137946
9137947
9137947
9137947
9137947
9137947
9137946
9137947
9137947
9137947
9137946
9137947
9137947
9137946
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137946
9137946
9137947
9137947
9137947
9137947
9137947
9137946
9137947
9137946
9137947
9137946
9137947
9137946
9137946
9137947
9137947
9137946
9137946
9137947
9137946
9137947
9137946
9137947
9137947
9137947
9137946
9137947
9137947
9137946
9137947
9137947
9137947
9137946
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137946
9137946
9137947
9137946
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137946
9137946
9137947
9137947
9137947
9137947
9137946
9137947
9137947
9137947
9137947
9137947
9137946
9137947
9137946
9137946
9137946
9137946
9137947
9137946
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137946
9137947
9137946
9137947
9137947
9137947
9137946
9137947
9137947
9137947
9137947
9137947
9137947
9137946
9137947
9137946
9137946
9137946
9137947
9137946
9137947
9137947
9137947
9137947
9137947
9137947
9137946
9137947
9137947
9137947
9137947
9137947
9137946
9137947
9137947
9137947
9137947
9137947
9137947
9137946
9137947
9137946
9137947
9137947
9137946
9137947
9137947
9137946
9137946
9137947
9137947
9137947
9137947
9137946
9137947
9137946
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137947
9137946
9137946
9137947
9137946
9137947
9137947
9137947
9137946
9137947
9137947
9137947
9137946
9137946
9137946
9137946
9137947
9137947
9137947

Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997693
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 1280 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.037
512 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.143
Truncate #1 on 1280 points by 12 bits
HomBN #2 via element-wise mult on 1280 points
[31m2 ==> 60550448788[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #2 on 128 points by 12 bits
Time in sec for current matmul = 0.038
-80043380 => -64434763214
[31mMatMul Output Mismatch[0m
Relu #3 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.143
Truncate #3 on 1280 points by 12 bits
HomBN #3 via element-wise mult on 1280 points
[31m2 ==> 45652280980[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #4 on 128 points by 12 bits
Time in sec for current matmul = 0.038
175382692 => 43584899282
[31mMatMul Output Mismatch[0m
Relu #5 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.143
Truncate #5 on 1280 points by 12 bits
HomBN #4 via element-wise mult on 1280 points
[31m2 ==> 13507135124[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #6 on 128 points by 12 bits
Time in sec for current matmul = 0.045
120942390 => 26449273176
[31mMatMul Output Mismatch[0m
Relu #7 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.143
Thread i = 0, total data sent till now = 3257150
Thread i = 1, total data sent till now = 1780839
Thread i = 2, total data sent till now = 1737227
Thread i = 3, total data sent till now = 1780839
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 1821659 microseconds.
Total data sent = 1.31571 MiB.
Number of rounds = 151
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 0.158 seconds.
Total time in BatchNorm = 0.149 seconds.
Total time in Truncation = 0.921 seconds.
Total time in Relu = 0.572 seconds.
Total time in MaxPool = 0 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 0.476254 MiB.
BatchNorm data sent = 0.714387 MiB.
Truncation data sent = 0.110603 MiB.
Relu data sent = 0.0144653 MiB.
Maxpool data sent = 0 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457344
6457343
6457343
6457343
6457343
6457344
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457344
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457344
6457343
6457343
6457343
6457343
6457344
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457344
6457343
6457343
6457343
6457343
6457344
6457343
6457343
6457344
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457344
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457343
6457344
6457343
6457343
6457343
6457343

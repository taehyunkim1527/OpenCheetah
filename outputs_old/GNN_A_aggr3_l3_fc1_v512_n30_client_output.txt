Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997840
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 15360 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.037
2048 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.004
Truncate #1 on 15360 points by 12 bits
Time in sec for current matmul = 1.249
1024 => 37207164526
[31mMatMul Output Mismatch[0m
Relu #3 on 15360 points, truncate=1 by 12 bits
Time in sec for current relu = 0.049
Maxpool 1 called N=512, H=1, W=1, C=1, ksizeH=1, ksizeW=30
Time in sec for current maxpool = 0.054
Time in sec for current matmul = 0.038
4552507034 => -23870950974
[31mMatMul Output Mismatch[0m
Relu #5 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.012
Truncate #2 on 15360 points by 12 bits
Time in sec for current matmul = 1.339
1024 => 43649615470
[31mMatMul Output Mismatch[0m
Relu #7 on 15360 points, truncate=1 by 12 bits
Time in sec for current relu = 0.054
Maxpool 2 called N=512, H=1, W=1, C=1, ksizeH=1, ksizeW=30
Time in sec for current maxpool = 0.06
Time in sec for current matmul = 0.043
4902181130 => -16691980718
[31mMatMul Output Mismatch[0m
Relu #9 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.012
Truncate #3 on 15360 points by 12 bits
Time in sec for current matmul = 1.356
1024 => -37686327698
[31mMatMul Output Mismatch[0m
Relu #11 on 15360 points, truncate=1 by 12 bits
Time in sec for current relu = 0.083
Maxpool 3 called N=512, H=1, W=1, C=1, ksizeH=1, ksizeW=30
Time in sec for current maxpool = 0.051
Time in sec for current matmul = 0.043
4652926236 => 30952645608
[31mMatMul Output Mismatch[0m
Relu #13 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.012
Thread i = 0, total data sent till now = 50088555
Thread i = 1, total data sent till now = 3304647
Thread i = 2, total data sent till now = 2124167
Thread i = 3, total data sent till now = 3304647
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 4993439 microseconds.
Total data sent = 49.2529 MiB.
Number of rounds = 1381
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 4.105 seconds.
Total time in BatchNorm = 0.03 seconds.
Total time in Truncation = 0.227 seconds.
Total time in Relu = 0.226 seconds.
Total time in MaxPool = 0.165 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 44.7691 MiB.
BatchNorm data sent = 0.714333 MiB.
Truncation data sent = 1.24744 MiB.
Relu data sent = 1.30344 MiB.
Maxpool data sent = 1.21866 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
7556800
7556799
7556799
7556799
7556799
7556799
7556800
7556800
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556800
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556800
7556799
7556800
7556800
7556799
7556799
7556799
7556799
7556800
7556799
7556800
7556799
7556799
7556799
7556800
7556800
7556800
7556799
7556799
7556800
7556800
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556800
7556800
7556799
7556799
7556800
7556799
7556799
7556799
7556799
7556799
7556800
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556800
7556800
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556800
7556799
7556799
7556799
7556799
7556800
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556800
7556800
7556799
7556800
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556800
7556799
7556799
7556800
7556799
7556799
7556799
7556799
7556800
7556799
7556800
7556799
7556800
7556800
7556799
7556799
7556799
7556799
7556800
7556799
7556799
7556800
7556800
7556799
7556800
7556800
7556799
7556800
7556799
7556799
7556799
7556799
7556799
7556800
7556799
7556800
7556799
7556799
7556800
7556799
7556799
7556799
7556800
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556800
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556800
7556799
7556800
7556799
7556800
7556800
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556800
7556799
7556799
7556799
7556799
7556800
7556799
7556799
7556799
7556799
7556800
7556799
7556800
7556799
7556800
7556799
7556799
7556800
7556800
7556799
7556799
7556799
7556799
7556799
7556799
7556800
7556799
7556799
7556800
7556799
7556799
7556800
7556799
7556800
7556800
7556800
7556799
7556799
7556799
7556799
7556799
7556799
7556800
7556800
7556799
7556800
7556800
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556800
7556800
7556800
7556800
7556800
7556799
7556799
7556800
7556799
7556799
7556800
7556799
7556799
7556800
7556799
7556799
7556799
7556800
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556800
7556800
7556799
7556799
7556799
7556799
7556799
7556800
7556800
7556799
7556799
7556799
7556799
7556799
7556799
7556800
7556799
7556800
7556799
7556799
7556799
7556799
7556800
7556800
7556799
7556800
7556799
7556799
7556799
7556799
7556800
7556800
7556799
7556800
7556799
7556799
7556799
7556800
7556799
7556799
7556799
7556799
7556799
7556800
7556800
7556799
7556799
7556799
7556800
7556800
7556800
7556799
7556799
7556799
7556799
7556800
7556799
7556800
7556799
7556799
7556799
7556800
7556799
7556800
7556800
7556799
7556799
7556799
7556800
7556799
7556799
7556799
7556799
7556799
7556800
7556799
7556799
7556799
7556800
7556799
7556799
7556799
7556800
7556800
7556799
7556800
7556799
7556799
7556800
7556799
7556799
7556799
7556799
7556800
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556800
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556800
7556799
7556800
7556799
7556799
7556799
7556799
7556799
7556799
7556799
7556800
7556799
7556799
7556800
7556800
7556799
7556799
7556799
7556800
7556799
7556800
7556799
7556799
7556799
7556799
7556800
7556800
7556800
7556799
7556799
7556800
7556799
7556799
7556800
7556799
7556799
7556799
7556799
7556799
7556800
7556799
7556799
7556800
7556799
7556799
7556799
7556799
7556800
7556799
7556799
7556799
7556799
7556799
7556800
7556800
7556799
7556799
7556799
7556800
7556799
7556799
7556800
7556800
7556800
7556800
7556799
7556799
7556799
7556799
7556799
7556800
7556799
7556799
7556799
7556799
7556799
7556800
7556799
7556799
7556799
7556799
7556799
7556800
7556799
7556800
7556800
7556799
7556799
7556800
7556800
7556799
7556800
7556799
7556799
7556799
7556800
7556799
7556799
7556799
7556799
7556799
7556799
7556800
7556799
7556799
7556799
Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997781
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 15360 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.04
2048 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.004
Truncate #1 on 15360 points by 12 bits
Time in sec for current matmul = 1.33
1024 => -39648879056
[31mMatMul Output Mismatch[0m
Relu #3 on 15360 points, truncate=1 by 12 bits
Time in sec for current relu = 0.053
Maxpool 1 called N=512, H=1, W=1, C=1, ksizeH=1, ksizeW=30
Time in sec for current maxpool = 0.051
Time in sec for current matmul = 0.038
3910627240 => -1683520762
[31mMatMul Output Mismatch[0m
Relu #5 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.012
Truncate #2 on 15360 points by 12 bits
Time in sec for current matmul = 1.349
1024 => -61257933265
[31mMatMul Output Mismatch[0m
Relu #7 on 15360 points, truncate=1 by 12 bits
Time in sec for current relu = 0.058
Maxpool 2 called N=512, H=1, W=1, C=1, ksizeH=1, ksizeW=30
Time in sec for current maxpool = 0.052
Time in sec for current matmul = 0.039
3108466482 => -53530004960
[31mMatMul Output Mismatch[0m
Relu #9 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.008
Truncate #3 on 15360 points by 12 bits
Time in sec for current matmul = 1.346
1024 => -68371472848
[31mMatMul Output Mismatch[0m
Relu #11 on 15360 points, truncate=1 by 12 bits
Time in sec for current relu = 0.05
Maxpool 3 called N=512, H=1, W=1, C=1, ksizeH=1, ksizeW=30
Time in sec for current maxpool = 0.051
Time in sec for current matmul = 0.04
5903092278 => -28047323074
[31mMatMul Output Mismatch[0m
Relu #13 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.011
Thread i = 0, total data sent till now = 50087490
Thread i = 1, total data sent till now = 3304647
Thread i = 2, total data sent till now = 2124167
Thread i = 3, total data sent till now = 3304647
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 4990507 microseconds.
Total data sent = 49.252 MiB.
Number of rounds = 1381
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 4.182 seconds.
Total time in BatchNorm = 0.029 seconds.
Total time in Truncation = 0.216 seconds.
Total time in Relu = 0.196 seconds.
Total time in MaxPool = 0.154 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 44.7681 MiB.
BatchNorm data sent = 0.714321 MiB.
Truncation data sent = 1.24744 MiB.
Relu data sent = 1.30344 MiB.
Maxpool data sent = 1.21866 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1

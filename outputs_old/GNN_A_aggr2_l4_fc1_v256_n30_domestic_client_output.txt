Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997821
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 7680 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.047
1024 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.143
Truncate #1 on 256 points by 12 bits
HomBN #2 via element-wise mult on 256 points
[31m120 ==> -21133615046[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #2 on 256 points by 12 bits
Time in sec for current matmul = 0.053
381743164 => -52834209766
[31mMatMul Output Mismatch[0m
Relu #3 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.144
Truncate #3 on 256 points by 12 bits
HomBN #3 via element-wise mult on 256 points
[31m116 ==> 64169765244[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #4 on 256 points by 12 bits
Time in sec for current matmul = 0.052
763910310 => 16192844620
[31mMatMul Output Mismatch[0m
Relu #5 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.144
Truncate #5 on 256 points by 12 bits
HomBN #4 via element-wise mult on 256 points
[31m7906782 ==> -68570708864[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #6 on 256 points by 12 bits
Time in sec for current matmul = 0.054
-303782944 => -30018543349
[31mMatMul Output Mismatch[0m
Relu #7 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.144
Truncate #7 on 256 points by 12 bits
HomBN #5 via element-wise mult on 256 points
[31m116 ==> 67564874804[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #8 on 256 points by 12 bits
Time in sec for current matmul = 0.054
-98345902 => 45964251624
[31mMatMul Output Mismatch[0m
Relu #9 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.144
Thread i = 0, total data sent till now = 4378800
Thread i = 1, total data sent till now = 1765167
Thread i = 2, total data sent till now = 1735071
Thread i = 3, total data sent till now = 1765167
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 2507741 microseconds.
Total data sent = 2.35333 MiB.
Number of rounds = 195
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 0.26 seconds.
Total time in BatchNorm = 0.22 seconds.
Total time in Truncation = 1.193 seconds.
Total time in Relu = 0.719 seconds.
Total time in MaxPool = 0 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 1.19071 MiB.
BatchNorm data sent = 1.07155 MiB.
Truncation data sent = 0.0556641 MiB.
Relu data sent = 0.0354004 MiB.
Maxpool data sent = 0 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
11221742
11221742
11221742
11221742
11221743
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221743
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221743
11221742
11221742
11221742
11221743
11221742
11221742
11221743
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221743
11221743
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221743
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221743
11221742
11221742
11221742
11221742
11221742
11221742
11221743
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221743
11221743
11221742
11221742
11221742
11221742
11221743
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221743
11221742
11221742
11221742
11221742
11221742
11221743
11221742
11221742
11221742
11221742
11221742
11221743
11221742
11221742
11221742
11221742
11221742
11221743
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221743
11221743
11221742
11221742
11221742
11221742
11221743
11221742
11221742
11221742
11221742
11221743
11221742
11221743
11221742
11221742
11221743
11221742
11221742
11221742
11221743
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221743
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221743
11221742
11221742
11221742
11221742
11221742
11221743
11221742
11221742
11221742
11221742
11221742
11221743
11221742
11221742
11221742
11221742
11221742
11221743
11221742
11221742
11221742
11221743
11221742
11221742
11221742
11221742
11221742
11221743
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221742
11221743
11221742
11221742
11221742
11221742
11221743
11221742
11221742
11221743
11221742
11221742
11221742
11221743
11221742
11221742
11221742
11221742

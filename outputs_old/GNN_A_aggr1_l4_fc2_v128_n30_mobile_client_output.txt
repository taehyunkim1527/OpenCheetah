Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997837
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 3840 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.12
512 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.703
Truncate #1 on 128 points by 12 bits
Time in sec for current matmul = 0.119
15360 => 58529925186
[31mMatMul Output Mismatch[0m
Relu #3 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.703
Time in sec for current matmul = 0.12
3658120570 => -55197902408
[31mMatMul Output Mismatch[0m
Relu #5 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.703
Truncate #2 on 128 points by 12 bits
Time in sec for current matmul = 0.12
14850 => -47931570082
[31mMatMul Output Mismatch[0m
Relu #7 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.703
Time in sec for current matmul = 0.12
-256 => 2619356904
[31mMatMul Output Mismatch[0m
Relu #9 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.703
Truncate #3 on 128 points by 12 bits
Time in sec for current matmul = 0.12
163725164 => 44013831852
[31mMatMul Output Mismatch[0m
Relu #11 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.703
Time in sec for current matmul = 0.12
2750864768 => 4928246866
[31mMatMul Output Mismatch[0m
Relu #13 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.703
Truncate #4 on 128 points by 12 bits
Time in sec for current matmul = 0.121
308030810 => 49965916220
[31mMatMul Output Mismatch[0m
Relu #15 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.703
Time in sec for current matmul = 0.121
3122870024 => 41594230808
[31mMatMul Output Mismatch[0m
Relu #17 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.703
Thread i = 0, total data sent till now = 3314118
Thread i = 1, total data sent till now = 1746339
Thread i = 2, total data sent till now = 1731411
Thread i = 3, total data sent till now = 1746339
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 11945511 microseconds.
Total data sent = 1.29855 MiB.
Number of rounds = 211
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 1.081 seconds.
Total time in BatchNorm = 0.131 seconds.
Total time in Truncation = 4.212 seconds.
Total time in Relu = 6.327 seconds.
Total time in MaxPool = 0 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 1.07175 MiB.
BatchNorm data sent = 0.178631 MiB.
Truncation data sent = 0.015625 MiB.
Relu data sent = 0.032547 MiB.
Maxpool data sent = 0 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
10154842
10154843
10154842
10154842
10154842
10154842
10154842
10154843
10154842
10154843
10154842
10154842
10154842
10154843
10154843
10154842
10154843
10154842
10154842
10154843
10154842
10154842
10154843
10154842
10154843
10154843
10154842
10154843
10154843
10154843
10154842
10154842
10154842
10154842
10154842
10154843
10154843
10154843
10154842
10154842
10154842
10154843
10154843
10154842
10154843
10154842
10154842
10154842
10154842
10154842
10154843
10154843
10154842
10154843
10154843
10154843
10154843
10154842
10154843
10154842
10154843
10154842
10154842
10154843
10154843
10154843
10154843
10154842
10154843
10154843
10154842
10154842
10154842
10154842
10154842
10154843
10154843
10154843
10154843
10154843
10154843
10154842
10154843
10154843
10154842
10154843
10154843
10154843
10154842
10154843
10154843
10154842
10154843
10154842
10154843
10154842
10154843
10154843
10154842
10154843
10154842
10154842
10154842
10154842
10154842
10154842
10154843
10154843
10154842
10154843
10154842
10154842
10154842
10154843
10154842
10154842
10154843
10154843
10154842
10154843
10154842
10154843
10154843
10154842
10154842
10154843
10154842
10154843

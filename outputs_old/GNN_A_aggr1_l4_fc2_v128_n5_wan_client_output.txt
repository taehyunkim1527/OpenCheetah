Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997705
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 640 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.059
512 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.283
Truncate #1 on 128 points by 12 bits
Time in sec for current matmul = 0.059
2560 => 63172161784
[31mMatMul Output Mismatch[0m
Relu #3 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.283
Time in sec for current matmul = 0.063
3948260364 => 16263544064
[31mMatMul Output Mismatch[0m
Relu #5 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.283
Truncate #2 on 128 points by 12 bits
Time in sec for current matmul = 0.058
1016474062 => -5976643912
[31mMatMul Output Mismatch[0m
Relu #7 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.283
Time in sec for current matmul = 0.059
-256 => 38332946200
[31mMatMul Output Mismatch[0m
Relu #9 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.283
Truncate #3 on 128 points by 12 bits
Time in sec for current matmul = 0.058
2395811710 => -30022379648
[31mMatMul Output Mismatch[0m
Relu #11 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.283
Time in sec for current matmul = 0.059
-256 => 19498491880
[31mMatMul Output Mismatch[0m
Relu #13 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.283
Truncate #4 on 128 points by 12 bits
Time in sec for current matmul = 0.059
1218658304 => -29111510024
[31mMatMul Output Mismatch[0m
Relu #15 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.283
Time in sec for current matmul = 0.059
-256 => 42626915314
[31mMatMul Output Mismatch[0m
Relu #17 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.283
Thread i = 0, total data sent till now = 3313827
Thread i = 1, total data sent till now = 1746339
Thread i = 2, total data sent till now = 1731411
Thread i = 3, total data sent till now = 1746339
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 4853287 microseconds.
Total data sent = 1.2984 MiB.
Number of rounds = 211
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 0.533 seconds.
Total time in BatchNorm = 0.055 seconds.
Total time in Truncation = 1.692 seconds.
Total time in Relu = 2.547 seconds.
Total time in MaxPool = 0 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 1.07163 MiB.
BatchNorm data sent = 0.178601 MiB.
Truncation data sent = 0.015625 MiB.
Relu data sent = 0.032547 MiB.
Maxpool data sent = 0 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
10406963
10406962
10406963
10406962
10406963
10406963
10406963
10406963
10406963
10406963
10406963
10406963
10406962
10406962
10406962
10406963
10406962
10406963
10406963
10406963
10406963
10406963
10406963
10406963
10406963
10406962
10406963
10406963
10406963
10406963
10406963
10406963
10406963
10406963
10406963
10406963
10406963
10406962
10406963
10406963
10406963
10406963
10406962
10406963
10406963
10406963
10406962
10406962
10406963
10406963
10406962
10406963
10406963
10406963
10406963
10406963
10406962
10406963
10406962
10406963
10406963
10406963
10406963
10406963
10406963
10406962
10406963
10406963
10406963
10406963
10406963
10406963
10406963
10406963
10406963
10406963
10406962
10406963
10406962
10406962
10406962
10406963
10406962
10406962
10406963
10406963
10406963
10406963
10406963
10406963
10406962
10406962
10406962
10406963
10406963
10406962
10406963
10406962
10406962
10406963
10406962
10406963
10406963
10406963
10406962
10406963
10406963
10406963
10406962
10406963
10406963
10406963
10406963
10406963
10406963
10406963
10406962
10406963
10406963
10406963
10406963
10406963
10406963
10406963
10406963
10406963
10406962
10406963

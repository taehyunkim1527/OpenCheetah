Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997752
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 7680 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.069
1024 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.284
Truncate #1 on 7680 points by 12 bits
HomBN #2 via element-wise mult on 7680 points
[31m2 ==> 42886316980[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #2 on 256 points by 12 bits
Time in sec for current matmul = 0.07
31441732 => -17427471626
[31mMatMul Output Mismatch[0m
Relu #3 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.284
Truncate #3 on 7680 points by 12 bits
HomBN #3 via element-wise mult on 7680 points
[31m2 ==> -66366913612[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #4 on 256 points by 12 bits
Time in sec for current matmul = 0.072
159432518 => 9433646766
[31mMatMul Output Mismatch[0m
Relu #5 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.284
Truncate #5 on 7680 points by 12 bits
HomBN #4 via element-wise mult on 7680 points
[31m2 ==> 43758732212[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #6 on 256 points by 12 bits
Time in sec for current matmul = 0.071
824149056 => 48921015386
[31mMatMul Output Mismatch[0m
Relu #7 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.284
Truncate #7 on 7680 points by 12 bits
HomBN #5 via element-wise mult on 7680 points
[31m2 ==> -20934212684[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #8 on 256 points by 12 bits
Time in sec for current matmul = 0.071
312783300 => 36315277396
[31mMatMul Output Mismatch[0m
Relu #9 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.284
Thread i = 0, total data sent till now = 5191840
Thread i = 1, total data sent till now = 2102959
Thread i = 2, total data sent till now = 1799103
Thread i = 3, total data sent till now = 2102959
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 4708086 microseconds.
Total data sent = 3.83412 MiB.
Number of rounds = 195
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 0.353 seconds.
Total time in BatchNorm = 0.381 seconds.
Total time in Truncation = 2.488 seconds.
Total time in Relu = 1.42 seconds.
Total time in MaxPool = 0 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 1.19058 MiB.
BatchNorm data sent = 1.78605 MiB.
Truncation data sent = 0.822083 MiB.
Relu data sent = 0.0354004 MiB.
Maxpool data sent = 0 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
8866036
8866035
8866036
8866035
8866036
8866035
8866035
8866036
8866035
8866035
8866036
8866035
8866035
8866036
8866035
8866036
8866035
8866035
8866035
8866036
8866036
8866035
8866035
8866036
8866035
8866035
8866036
8866036
8866035
8866035
8866035
8866035
8866035
8866035
8866035
8866035
8866036
8866035
8866036
8866035
8866036
8866036
8866035
8866036
8866036
8866036
8866035
8866035
8866036
8866035
8866035
8866035
8866035
8866035
8866036
8866035
8866035
8866036
8866036
8866035
8866036
8866035
8866035
8866035
8866036
8866035
8866036
8866036
8866036
8866035
8866035
8866036
8866036
8866036
8866035
8866035
8866036
8866036
8866036
8866036
8866035
8866035
8866035
8866036
8866035
8866036
8866035
8866035
8866036
8866035
8866035
8866035
8866035
8866036
8866035
8866035
8866036
8866036
8866035
8866036
8866036
8866036
8866035
8866035
8866036
8866035
8866036
8866036
8866036
8866036
8866035
8866035
8866036
8866035
8866035
8866036
8866035
8866036
8866036
8866035
8866036
8866035
8866036
8866036
8866036
8866036
8866035
8866035
8866036
8866035
8866036
8866036
8866036
8866035
8866036
8866035
8866035
8866035
8866035
8866035
8866035
8866035
8866035
8866036
8866035
8866035
8866036
8866035
8866036
8866036
8866035
8866035
8866035
8866036
8866035
8866036
8866035
8866036
8866036
8866035
8866035
8866035
8866035
8866036
8866036
8866035
8866036
8866036
8866036
8866036
8866036
8866035
8866036
8866036
8866036
8866035
8866035
8866035
8866036
8866036
8866036
8866036
8866036
8866036
8866036
8866035
8866035
8866035
8866036
8866035
8866036
8866036
8866035
8866036
8866036
8866036
8866035
8866036
8866035
8866035
8866035
8866036
8866035
8866036
8866036
8866036
8866035
8866036
8866036
8866035
8866036
8866035
8866035
8866035
8866035
8866035
8866035
8866035
8866036
8866036
8866035
8866036
8866036
8866035
8866035
8866036
8866035
8866035
8866035
8866035
8866036
8866035
8866035
8866036
8866036
8866035
8866035
8866036
8866036
8866035
8866035
8866036
8866036
8866036
8866036
8866036
8866035
8866036
8866035
8866035
8866036
8866036
8866035
8866035
8866036
8866035

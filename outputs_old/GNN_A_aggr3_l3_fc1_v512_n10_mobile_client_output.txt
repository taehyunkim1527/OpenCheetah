Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997731
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 5120 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.205
2048 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.705
Truncate #1 on 5120 points by 12 bits
Time in sec for current matmul = 2.054
1024 => -7286630776
[31mMatMul Output Mismatch[0m
Relu #3 on 5120 points, truncate=1 by 12 bits
Time in sec for current relu = 0.723
Maxpool 1 called N=512, H=1, W=1, C=1, ksizeH=1, ksizeW=10
Time in sec for current maxpool = 6.35
Time in sec for current matmul = 0.363
5283664144 => -68497526831
[31mMatMul Output Mismatch[0m
Relu #5 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.71
Truncate #2 on 5120 points by 12 bits
Time in sec for current matmul = 2.127
1024 => 4524529288
[31mMatMul Output Mismatch[0m
Relu #7 on 5120 points, truncate=1 by 12 bits
Time in sec for current relu = 0.722
Maxpool 2 called N=512, H=1, W=1, C=1, ksizeH=1, ksizeW=10
Time in sec for current maxpool = 6.351
Time in sec for current matmul = 0.356
5799013396 => 9235511413
[31mMatMul Output Mismatch[0m
Relu #9 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.71
Truncate #3 on 5120 points by 12 bits
Time in sec for current matmul = 2.125
1024 => -55001033080
[31mMatMul Output Mismatch[0m
Relu #11 on 5120 points, truncate=1 by 12 bits
Time in sec for current relu = 0.727
Maxpool 3 called N=512, H=1, W=1, C=1, ksizeH=1, ksizeW=10
Time in sec for current maxpool = 6.348
Time in sec for current matmul = 0.366
6913285522 => 16696387041
[31mMatMul Output Mismatch[0m
Relu #13 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.71
Thread i = 0, total data sent till now = 19485439
Thread i = 1, total data sent till now = 2257287
Thread i = 2, total data sent till now = 1860167
Thread i = 3, total data sent till now = 2257287
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 37271078 microseconds.
Total data sent = 17.8182 MiB.
Number of rounds = 541
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 7.596 seconds.
Total time in BatchNorm = 0.25 seconds.
Total time in Truncation = 3.296 seconds.
Total time in Relu = 5.007 seconds.
Total time in MaxPool = 19.049 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 16.1927 MiB.
BatchNorm data sent = 0.357202 MiB.
Truncation data sent = 0.417969 MiB.
Relu data sent = 0.472137 MiB.
Maxpool data sent = 0.378204 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
4076268
4076267
4076268
4076268
4076267
4076267
4076267
4076267
4076268
4076267
4076268
4076268
4076267
4076267
4076267
4076268
4076267
4076267
4076268
4076267
4076268
4076267
4076268
4076267
4076267
4076268
4076267
4076267
4076268
4076268
4076267
4076267
4076267
4076268
4076267
4076267
4076267
4076267
4076268
4076268
4076267
4076268
4076267
4076267
4076267
4076267
4076268
4076268
4076267
4076267
4076268
4076268
4076267
4076267
4076268
4076267
4076267
4076267
4076267
4076267
4076268
4076267
4076268
4076268
4076267
4076268
4076267
4076268
4076268
4076267
4076268
4076268
4076267
4076268
4076267
4076267
4076267
4076267
4076268
4076267
4076267
4076267
4076268
4076267
4076267
4076267
4076267
4076267
4076267
4076267
4076267
4076268
4076267
4076268
4076268
4076267
4076267
4076267
4076268
4076267
4076267
4076267
4076268
4076268
4076268
4076268
4076267
4076267
4076268
4076267
4076267
4076268
4076267
4076267
4076267
4076267
4076267
4076268
4076267
4076267
4076267
4076267
4076267
4076267
4076268
4076267
4076268
4076267
4076268
4076267
4076267
4076267
4076267
4076267
4076267
4076268
4076267
4076267
4076267
4076267
4076267
4076267
4076268
4076267
4076267
4076267
4076267
4076268
4076268
4076268
4076267
4076267
4076267
4076267
4076267
4076268
4076267
4076267
4076267
4076268
4076268
4076268
4076267
4076267
4076267
4076267
4076267
4076267
4076267
4076267
4076267
4076267
4076268
4076267
4076268
4076267
4076268
4076267
4076268
4076267
4076268
4076268
4076268
4076267
4076267
4076268
4076267
4076267
4076268
4076268
4076267
4076268
4076267
4076267
4076268
4076267
4076267
4076268
4076268
4076268
4076267
4076267
4076268
4076267
4076267
4076267
4076268
4076267
4076267
4076268
4076268
4076267
4076267
4076267
4076267
4076267
4076267
4076267
4076267
4076267
4076267
4076268
4076267
4076267
4076268
4076268
4076268
4076267
4076267
4076267
4076268
4076268
4076267
4076267
4076268
4076268
4076268
4076267
4076268
4076267
4076268
4076268
4076267
4076267
4076267
4076267
4076267
4076267
4076268
4076267
4076267
4076268
4076267
4076268
4076268
4076267
4076268
4076267
4076268
4076267
4076268
4076267
4076267
4076267
4076267
4076267
4076267
4076267
4076267
4076267
4076267
4076268
4076268
4076267
4076267
4076268
4076268
4076268
4076267
4076268
4076267
4076267
4076268
4076268
4076268
4076267
4076267
4076267
4076267
4076268
4076267
4076268
4076267
4076268
4076268
4076268
4076267
4076267
4076268
4076267
4076268
4076267
4076267
4076267
4076268
4076268
4076267
4076268
4076268
4076268
4076267
4076267
4076267
4076267
4076267
4076267
4076267
4076267
4076267
4076268
4076267
4076268
4076268
4076268
4076267
4076267
4076268
4076267
4076267
4076268
4076267
4076267
4076267
4076267
4076268
4076267
4076267
4076268
4076267
4076267
4076267
4076267
4076267
4076268
4076267
4076267
4076267
4076267
4076267
4076267
4076268
4076267
4076267
4076267
4076267
4076268
4076267
4076268
4076267
4076267
4076268
4076267
4076267
4076268
4076267
4076268
4076267
4076267
4076268
4076267
4076268
4076267
4076268
4076267
4076267
4076268
4076268
4076268
4076267
4076267
4076267
4076268
4076268
4076267
4076267
4076267
4076268
4076268
4076268
4076267
4076268
4076268
4076267
4076268
4076267
4076267
4076268
4076268
4076267
4076267
4076267
4076267
4076268
4076267
4076267
4076267
4076267
4076267
4076268
4076267
4076267
4076267
4076267
4076268
4076268
4076268
4076267
4076267
4076267
4076267
4076267
4076267
4076268
4076268
4076268
4076268
4076267
4076267
4076267
4076267
4076268
4076267
4076267
4076268
4076267
4076268
4076268
4076267
4076267
4076267
4076268
4076268
4076267
4076268
4076268
4076268
4076267
4076268
4076268
4076267
4076267
4076267
4076267
4076268
4076267
4076267
4076268
4076268
4076267
4076268
4076267
4076267
4076267
4076267
4076268
4076268
4076268
4076267
4076268
4076268
4076268
4076267
4076267
4076268
4076267
4076267
4076267
4076268
4076268
4076267
4076267
4076267
4076268
4076267
4076268
4076267
4076268
4076268
4076267
4076268
4076268
4076267
4076267
4076267
4076267
4076267
4076267
4076267
4076267
4076267
4076268
4076267
4076268
4076268
4076267
4076268
4076267
4076268
4076267
4076267
4076267
4076267
Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997771
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 5120 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.208
2048 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.706
Truncate #1 on 5120 points by 12 bits
Time in sec for current matmul = 2.045
1024 => 55183438362
[31mMatMul Output Mismatch[0m
Relu #3 on 5120 points, truncate=1 by 12 bits
Time in sec for current relu = 0.724
Maxpool 1 called N=512, H=1, W=1, C=1, ksizeH=1, ksizeW=10
Time in sec for current maxpool = 6.349
Time in sec for current matmul = 0.362
7049637776 => -60386661412
[31mMatMul Output Mismatch[0m
Relu #5 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.71
Truncate #2 on 5120 points by 12 bits
Time in sec for current matmul = 2.107
1024 => -65276972518
[31mMatMul Output Mismatch[0m
Relu #7 on 5120 points, truncate=1 by 12 bits
Time in sec for current relu = 0.725
Maxpool 2 called N=512, H=1, W=1, C=1, ksizeH=1, ksizeW=10
Time in sec for current maxpool = 6.349
Time in sec for current matmul = 0.364
6819591704 => -2166764494
[31mMatMul Output Mismatch[0m
Relu #9 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.71
Truncate #3 on 5120 points by 12 bits
Time in sec for current matmul = 2.111
1024 => 50754253338
[31mMatMul Output Mismatch[0m
Relu #11 on 5120 points, truncate=1 by 12 bits
Time in sec for current relu = 0.726
Maxpool 3 called N=512, H=1, W=1, C=1, ksizeH=1, ksizeW=10
Time in sec for current maxpool = 6.349
Time in sec for current matmul = 0.361
5429386758 => 21864852054
[31mMatMul Output Mismatch[0m
Relu #13 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.71
Thread i = 0, total data sent till now = 19485984
Thread i = 1, total data sent till now = 2257287
Thread i = 2, total data sent till now = 1860167
Thread i = 3, total data sent till now = 2257287
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 37218391 microseconds.
Total data sent = 17.8187 MiB.
Number of rounds = 541
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 7.558 seconds.
Total time in BatchNorm = 0.25 seconds.
Total time in Truncation = 3.293 seconds.
Total time in Relu = 5.011 seconds.
Total time in MaxPool = 19.047 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 16.1931 MiB.
BatchNorm data sent = 0.357212 MiB.
Truncation data sent = 0.417969 MiB.
Relu data sent = 0.472137 MiB.
Maxpool data sent = 0.378204 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
5338099
5338100
5338099
5338100
5338099
5338100
5338100
5338100
5338100
5338100
5338100
5338100
5338099
5338099
5338099
5338100
5338099
5338100
5338100
5338099
5338099
5338100
5338099
5338100
5338100
5338100
5338100
5338100
5338100
5338099
5338099
5338100
5338099
5338100
5338099
5338099
5338100
5338100
5338099
5338100
5338099
5338099
5338100
5338100
5338100
5338100
5338100
5338099
5338100
5338100
5338100
5338099
5338100
5338100
5338100
5338099
5338099
5338100
5338099
5338100
5338100
5338100
5338099
5338100
5338099
5338100
5338099
5338099
5338100
5338100
5338100
5338099
5338099
5338100
5338100
5338100
5338099
5338100
5338099
5338100
5338099
5338100
5338100
5338100
5338100
5338100
5338100
5338100
5338099
5338099
5338100
5338100
5338099
5338100
5338099
5338100
5338100
5338099
5338100
5338100
5338099
5338100
5338100
5338100
5338100
5338100
5338100
5338100
5338099
5338100
5338099
5338099
5338100
5338100
5338100
5338099
5338100
5338100
5338100
5338099
5338100
5338100
5338099
5338100
5338099
5338100
5338100
5338100
5338099
5338100
5338100
5338099
5338099
5338100
5338100
5338099
5338100
5338100
5338099
5338100
5338100
5338100
5338099
5338099
5338100
5338099
5338100
5338100
5338099
5338100
5338099
5338100
5338099
5338100
5338100
5338099
5338100
5338100
5338100
5338099
5338100
5338100
5338099
5338100
5338100
5338100
5338100
5338100
5338099
5338100
5338099
5338099
5338099
5338100
5338099
5338100
5338100
5338100
5338099
5338100
5338100
5338100
5338100
5338100
5338099
5338100
5338099
5338100
5338099
5338099
5338100
5338099
5338099
5338100
5338100
5338100
5338100
5338100
5338100
5338100
5338099
5338099
5338100
5338100
5338099
5338100
5338100
5338100
5338100
5338100
5338099
5338099
5338100
5338100
5338100
5338100
5338099
5338099
5338100
5338099
5338099
5338100
5338100
5338100
5338099
5338099
5338100
5338100
5338100
5338100
5338099
5338100
5338100
5338100
5338099
5338099
5338100
5338100
5338099
5338099
5338100
5338099
5338100
5338099
5338099
5338100
5338100
5338100
5338100
5338100
5338100
5338100
5338100
5338100
5338099
5338100
5338099
5338100
5338100
5338100
5338099
5338100
5338100
5338099
5338099
5338099
5338100
5338100
5338099
5338100
5338099
5338099
5338099
5338100
5338100
5338100
5338099
5338100
5338100
5338099
5338099
5338100
5338100
5338099
5338100
5338100
5338099
5338099
5338100
5338100
5338099
5338100
5338099
5338099
5338100
5338100
5338100
5338099
5338099
5338100
5338100
5338100
5338100
5338099
5338099
5338099
5338100
5338099
5338099
5338100
5338100
5338099
5338100
5338100
5338100
5338099
5338100
5338100
5338099
5338099
5338099
5338100
5338100
5338099
5338100
5338100
5338100
5338100
5338099
5338099
5338100
5338100
5338099
5338100
5338100
5338100
5338100
5338099
5338100
5338100
5338099
5338100
5338099
5338100
5338100
5338099
5338099
5338100
5338100
5338100
5338099
5338100
5338100
5338100
5338100
5338100
5338099
5338100
5338100
5338100
5338100
5338100
5338100
5338100
5338099
5338099
5338100
5338100
5338100
5338100
5338100
5338100
5338099
5338100
5338099
5338099
5338100
5338100
5338099
5338100
5338099
5338100
5338100
5338099
5338100
5338100
5338100
5338099
5338100
5338100
5338100
5338099
5338100
5338100
5338100
5338100
5338100
5338100
5338099
5338100
5338100
5338100
5338100
5338099
5338099
5338100
5338100
5338100
5338100
5338100
5338100
5338099
5338099
5338100
5338100
5338100
5338100
5338100
5338099
5338099
5338099
5338100
5338100
5338100
5338099
5338100
5338100
5338099
5338100
5338099
5338100
5338100
5338100
5338099
5338100
5338100
5338100
5338100
5338100
5338099
5338100
5338100
5338100
5338100
5338100
5338100
5338100
5338100
5338100
5338099
5338100
5338099
5338100
5338100
5338099
5338099
5338099
5338100
5338100
5338099
5338099
5338100
5338099
5338100
5338100
5338099
5338100
5338099
5338100
5338100
5338100
5338100
5338099
5338100
5338100
5338100
5338100
5338100
5338099
5338100
5338099
5338100
5338099
5338100
5338100
5338099
5338100
5338100
5338100
5338099
5338100
5338100
5338099
5338099
5338100
5338100
5338100
5338100
5338099
5338100
5338100
5338100
5338100
5338100
5338100
5338100
5338099
5338099
5338099
5338100
5338100
5338100

Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997800
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 768 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.069
1024 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.284
Truncate #1 on 768 points by 12 bits
Time in sec for current matmul = 0.202
512 => 3534689715
[31mMatMul Output Mismatch[0m
Relu #3 on 768 points, truncate=1 by 12 bits
Time in sec for current relu = 0.287
Maxpool 1 called N=256, H=1, W=1, C=1, ksizeH=1, ksizeW=3
Time in sec for current maxpool = 0.568
Time in sec for current matmul = 0.07
148429752 => -47661673224
[31mMatMul Output Mismatch[0m
Relu #5 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.284
Truncate #2 on 768 points by 12 bits
Time in sec for current matmul = 0.215
512 => 16688027059
[31mMatMul Output Mismatch[0m
Relu #7 on 768 points, truncate=1 by 12 bits
Time in sec for current relu = 0.287
Maxpool 2 called N=256, H=1, W=1, C=1, ksizeH=1, ksizeW=3
Time in sec for current maxpool = 0.568
Time in sec for current matmul = 0.072
2705557320 => 18197790064
[31mMatMul Output Mismatch[0m
Relu #9 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.284
Truncate #3 on 768 points by 12 bits
Time in sec for current matmul = 0.209
512 => -26395863628
[31mMatMul Output Mismatch[0m
Relu #11 on 768 points, truncate=1 by 12 bits
Time in sec for current relu = 0.287
Maxpool 3 called N=256, H=1, W=1, C=1, ksizeH=1, ksizeW=3
Time in sec for current maxpool = 0.568
Time in sec for current matmul = 0.067
4024927612 => 46072118190
[31mMatMul Output Mismatch[0m
Relu #13 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.284
Thread i = 0, total data sent till now = 5452227
Thread i = 1, total data sent till now = 1808975
Thread i = 2, total data sent till now = 1747239
Thread i = 3, total data sent till now = 1808975
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 6050270 microseconds.
Total data sent = 3.47221 MiB.
Number of rounds = 247
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 0.904 seconds.
Total time in BatchNorm = 0.055 seconds.
Total time in Truncation = 1.301 seconds.
Total time in Relu = 1.997 seconds.
Total time in MaxPool = 1.704 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 3.09578 MiB.
BatchNorm data sent = 0.178596 MiB.
Truncation data sent = 0.0642242 MiB.
Relu data sent = 0.0911255 MiB.
Maxpool data sent = 0.0424805 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
11248077
11248077
11248077
11248077
11248077
11248076
11248077
11248076
11248076
11248077
11248077
11248076
11248077
11248077
11248076
11248077
11248077
11248077
11248077
11248076
11248076
11248077
11248076
11248077
11248077
11248076
11248076
11248077
11248077
11248077
11248077
11248077
11248077
11248076
11248077
11248076
11248076
11248077
11248076
11248076
11248077
11248077
11248077
11248077
11248077
11248077
11248076
11248076
11248076
11248077
11248077
11248076
11248076
11248077
11248076
11248077
11248077
11248077
11248077
11248077
11248076
11248077
11248076
11248077
11248076
11248076
11248077
11248077
11248076
11248077
11248077
11248077
11248077
11248076
11248077
11248077
11248077
11248076
11248077
11248076
11248077
11248077
11248077
11248076
11248077
11248077
11248076
11248076
11248076
11248077
11248077
11248077
11248077
11248077
11248076
11248077
11248077
11248076
11248077
11248077
11248077
11248077
11248077
11248077
11248076
11248077
11248077
11248077
11248076
11248076
11248076
11248076
11248077
11248076
11248076
11248077
11248077
11248077
11248076
11248076
11248076
11248077
11248077
11248077
11248077
11248077
11248077
11248077
11248077
11248077
11248077
11248076
11248076
11248076
11248077
11248077
11248077
11248076
11248076
11248077
11248077
11248077
11248076
11248077
11248076
11248076
11248077
11248076
11248077
11248076
11248077
11248077
11248077
11248076
11248077
11248077
11248077
11248076
11248077
11248077
11248076
11248077
11248077
11248077
11248077
11248077
11248076
11248076
11248076
11248077
11248077
11248077
11248077
11248077
11248077
11248077
11248077
11248077
11248077
11248076
11248077
11248077
11248076
11248077
11248077
11248077
11248077
11248077
11248077
11248077
11248077
11248077
11248077
11248077
11248077
11248077
11248077
11248077
11248077
11248077
11248076
11248077
11248076
11248076
11248076
11248076
11248076
11248077
11248076
11248077
11248077
11248076
11248076
11248077
11248076
11248077
11248077
11248076
11248077
11248076
11248077
11248077
11248077
11248076
11248077
11248077
11248077
11248076
11248077
11248077
11248077
11248076
11248077
11248077
11248077
11248077
11248076
11248077
11248077
11248077
11248076
11248077
11248077
11248077
11248076
11248077
11248077
11248077
11248077
11248076
11248076
11248076
11248077
11248077
11248077
11248077
Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997838
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 768 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.071
1024 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.284
Truncate #1 on 768 points by 12 bits
Time in sec for current matmul = 0.209
512 => -1660680526
[31mMatMul Output Mismatch[0m
Relu #3 on 768 points, truncate=1 by 12 bits
Time in sec for current relu = 0.287
Maxpool 1 called N=256, H=1, W=1, C=1, ksizeH=1, ksizeW=3
Time in sec for current maxpool = 0.568
Time in sec for current matmul = 0.072
1522696894 => 34391806392
[31mMatMul Output Mismatch[0m
Relu #5 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.284
Truncate #2 on 768 points by 12 bits
Time in sec for current matmul = 0.212
512 => -3002857806
[31mMatMul Output Mismatch[0m
Relu #7 on 768 points, truncate=1 by 12 bits
Time in sec for current relu = 0.287
Maxpool 2 called N=256, H=1, W=1, C=1, ksizeH=1, ksizeW=3
Time in sec for current maxpool = 0.568
Time in sec for current matmul = 0.07
4298975800 => -55442587242
[31mMatMul Output Mismatch[0m
Relu #9 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.284
Truncate #3 on 768 points by 12 bits
Time in sec for current matmul = 0.2
512 => -30181947726
[31mMatMul Output Mismatch[0m
Relu #11 on 768 points, truncate=1 by 12 bits
Time in sec for current relu = 0.287
Maxpool 3 called N=256, H=1, W=1, C=1, ksizeH=1, ksizeW=3
Time in sec for current maxpool = 0.568
Time in sec for current matmul = 0.07
2702703602 => 42085652216
[31mMatMul Output Mismatch[0m
Relu #13 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.284
Thread i = 0, total data sent till now = 5451912
Thread i = 1, total data sent till now = 1808975
Thread i = 2, total data sent till now = 1747239
Thread i = 3, total data sent till now = 1808975
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 6048265 microseconds.
Total data sent = 3.47187 MiB.
Number of rounds = 247
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 0.904 seconds.
Total time in BatchNorm = 0.056 seconds.
Total time in Truncation = 1.301 seconds.
Total time in Relu = 1.997 seconds.
Total time in MaxPool = 1.704 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 3.09548 MiB.
BatchNorm data sent = 0.178562 MiB.
Truncation data sent = 0.0642242 MiB.
Relu data sent = 0.0911255 MiB.
Maxpool data sent = 0.0424805 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
10274818
10274819
10274818
10274819
10274818
10274818
10274819
10274818
10274819
10274819
10274819
10274818
10274818
10274818
10274819
10274819
10274819
10274818
10274819
10274818
10274818
10274819
10274819
10274818
10274818
10274818
10274818
10274818
10274819
10274818
10274818
10274819
10274818
10274818
10274818
10274818
10274818
10274818
10274819
10274818
10274819
10274818
10274818
10274818
10274819
10274818
10274818
10274819
10274818
10274819
10274818
10274818
10274819
10274819
10274819
10274819
10274818
10274818
10274819
10274818
10274818
10274819
10274818
10274819
10274818
10274818
10274819
10274818
10274818
10274818
10274819
10274819
10274819
10274818
10274818
10274818
10274818
10274818
10274818
10274818
10274818
10274818
10274818
10274818
10274819
10274818
10274818
10274818
10274819
10274819
10274819
10274819
10274819
10274819
10274818
10274818
10274819
10274819
10274818
10274818
10274818
10274818
10274819
10274819
10274819
10274819
10274818
10274819
10274818
10274818
10274818
10274819
10274818
10274819
10274818
10274819
10274818
10274818
10274819
10274818
10274818
10274818
10274818
10274818
10274819
10274819
10274818
10274818
10274819
10274818
10274819
10274819
10274819
10274818
10274819
10274819
10274819
10274818
10274819
10274818
10274819
10274819
10274818
10274818
10274818
10274819
10274819
10274818
10274818
10274819
10274819
10274818
10274819
10274819
10274818
10274818
10274818
10274819
10274819
10274818
10274819
10274819
10274818
10274819
10274819
10274819
10274819
10274818
10274818
10274818
10274818
10274819
10274818
10274819
10274818
10274819
10274819
10274819
10274819
10274818
10274818
10274818
10274818
10274819
10274818
10274818
10274819
10274818
10274818
10274818
10274818
10274819
10274818
10274819
10274818
10274819
10274819
10274818
10274819
10274819
10274819
10274818
10274819
10274818
10274818
10274819
10274818
10274819
10274818
10274818
10274818
10274819
10274818
10274818
10274818
10274818
10274818
10274818
10274819
10274818
10274819
10274818
10274818
10274818
10274819
10274819
10274819
10274818
10274818
10274819
10274819
10274818
10274818
10274818
10274818
10274818
10274819
10274819
10274818
10274818
10274818
10274818
10274819
10274819
10274818
10274818
10274819
10274818
10274819
10274819
10274818
10274819
10274819
10274818
10274818
10274819

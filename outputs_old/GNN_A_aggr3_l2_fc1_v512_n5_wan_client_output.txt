Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997914
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 2560 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.095
2048 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.286
Truncate #1 on 2560 points by 12 bits
Time in sec for current matmul = 0.467
1024 => -32014051900
[31mMatMul Output Mismatch[0m
Relu #3 on 2560 points, truncate=1 by 12 bits
Time in sec for current relu = 0.296
Maxpool 1 called N=512, H=1, W=1, C=1, ksizeH=1, ksizeW=5
Time in sec for current maxpool = 1.144
Time in sec for current matmul = 0.095
4270284430 => 49140107244
[31mMatMul Output Mismatch[0m
Relu #5 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.287
Truncate #2 on 2560 points by 12 bits
Time in sec for current matmul = 0.455
1024 => 36436989380
[31mMatMul Output Mismatch[0m
Relu #7 on 2560 points, truncate=1 by 12 bits
Time in sec for current relu = 0.299
Maxpool 2 called N=512, H=1, W=1, C=1, ksizeH=1, ksizeW=5
Time in sec for current maxpool = 1.142
Time in sec for current matmul = 0.097
16991731818 => -54468812504
[31mMatMul Output Mismatch[0m
Relu #9 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.287
Thread i = 0, total data sent till now = 8722890
Thread i = 1, total data sent till now = 1907719
Thread i = 2, total data sent till now = 1772087
Thread i = 3, total data sent till now = 1907719
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 6273245 microseconds.
Total data sent = 6.80328 MiB.
Number of rounds = 227
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 1.209 seconds.
Total time in BatchNorm = 0.056 seconds.
Total time in Truncation = 0.92 seconds.
Total time in Relu = 1.455 seconds.
Total time in MaxPool = 2.286 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 6.19114 MiB.
BatchNorm data sent = 0.178582 MiB.
Truncation data sent = 0.140625 MiB.
Relu data sent = 0.180878 MiB.
Maxpool data sent = 0.112061 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997781
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 2560 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.09
2048 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.286
Truncate #1 on 2560 points by 12 bits
Time in sec for current matmul = 0.466
1024 => 55381424012
[31mMatMul Output Mismatch[0m
Relu #3 on 2560 points, truncate=1 by 12 bits
Time in sec for current relu = 0.296
Maxpool 1 called N=512, H=1, W=1, C=1, ksizeH=1, ksizeW=5
Time in sec for current maxpool = 1.141
Time in sec for current matmul = 0.097
5785405900 => -47256779778
[31mMatMul Output Mismatch[0m
Relu #5 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.287
Truncate #2 on 2560 points by 12 bits
Time in sec for current matmul = 0.457
1024 => 24444237708
[31mMatMul Output Mismatch[0m
Relu #7 on 2560 points, truncate=1 by 12 bits
Time in sec for current relu = 0.298
Maxpool 2 called N=512, H=1, W=1, C=1, ksizeH=1, ksizeW=5
Time in sec for current maxpool = 1.14
Time in sec for current matmul = 0.096
3978104916 => 53434993808
[31mMatMul Output Mismatch[0m
Relu #9 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.286
Thread i = 0, total data sent till now = 8722747
Thread i = 1, total data sent till now = 1907719
Thread i = 2, total data sent till now = 1772087
Thread i = 3, total data sent till now = 1907719
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 6322181 microseconds.
Total data sent = 6.80327 MiB.
Number of rounds = 227
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 1.206 seconds.
Total time in BatchNorm = 0.054 seconds.
Total time in Truncation = 0.919 seconds.
Total time in Relu = 1.453 seconds.
Total time in MaxPool = 2.281 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 6.19111 MiB.
BatchNorm data sent = 0.178604 MiB.
Truncation data sent = 0.140625 MiB.
Relu data sent = 0.180878 MiB.
Maxpool data sent = 0.112061 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
13045654
13045654
13045654
13045654
13045654
13045653
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045653
13045654
13045654
13045653
13045654
13045654
13045653
13045653
13045654
13045653
13045654
13045653
13045653
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045653
13045654
13045654
13045654
13045654
13045653
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045653
13045653
13045653
13045654
13045654
13045653
13045654
13045654
13045654
13045654
13045654
13045654
13045653
13045654
13045653
13045653
13045653
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045653
13045654
13045654
13045653
13045654
13045654
13045654
13045654
13045654
13045653
13045654
13045653
13045653
13045654
13045654
13045654
13045654
13045654
13045654
13045653
13045654
13045654
13045654
13045653
13045654
13045653
13045654
13045653
13045653
13045654
13045654
13045654
13045654
13045653
13045653
13045653
13045654
13045654
13045654
13045654
13045653
13045653
13045654
13045654
13045654
13045654
13045654
13045653
13045654
13045654
13045654
13045654
13045654
13045654
13045653
13045653
13045653
13045654
13045654
13045654
13045653
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045653
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045653
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045653
13045653
13045654
13045653
13045654
13045654
13045654
13045654
13045654
13045653
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045653
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045653
13045653
13045654
13045653
13045653
13045653
13045654
13045654
13045654
13045654
13045654
13045653
13045654
13045654
13045654
13045654
13045653
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045653
13045654
13045654
13045654
13045654
13045654
13045653
13045654
13045654
13045653
13045654
13045653
13045654
13045654
13045653
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045653
13045654
13045654
13045653
13045654
13045654
13045654
13045654
13045653
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045653
13045654
13045653
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045653
13045653
13045654
13045654
13045654
13045654
13045654
13045653
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045653
13045653
13045654
13045654
13045654
13045654
13045654
13045654
13045653
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045653
13045653
13045654
13045654
13045654
13045654
13045654
13045653
13045654
13045654
13045654
13045654
13045653
13045653
13045654
13045653
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045653
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045653
13045653
13045653
13045653
13045654
13045654
13045654
13045654
13045654
13045654
13045653
13045654
13045654
13045654
13045654
13045653
13045654
13045654
13045653
13045654
13045654
13045654
13045653
13045653
13045654
13045654
13045654
13045653
13045654
13045654
13045654
13045653
13045654
13045654
13045654
13045654
13045654
13045654
13045653
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045653
13045654
13045654
13045654
13045653
13045654
13045654
13045654
13045654
13045653
13045654
13045654
13045654
13045654
13045653
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045653
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045653
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045654
13045653
13045654
13045654
13045653
13045653
13045653
13045654
13045654
13045654
13045653
13045653
13045653
13045654
13045653
13045654
13045654
13045653
13045654
13045654
13045653
13045654
13045654
13045654
13045653
13045653
13045654
13045653
13045653
13045654
13045653
13045653
13045654
13045654
13045654
13045653
13045654
13045654
13045654

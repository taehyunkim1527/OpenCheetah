Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997700
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 6400 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.04
512 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.143
Truncate #1 on 128 points by 12 bits
HomBN #2 via element-wise mult on 128 points
[31m200 ==> 57136971218[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #2 on 128 points by 12 bits
Time in sec for current matmul = 0.039
93860698 => 616492390
[31mMatMul Output Mismatch[0m
Relu #3 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.143
Time in sec for current matmul = 0.039
38531034 => 51899923272
[31mMatMul Output Mismatch[0m
Relu #5 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.143
Truncate #3 on 128 points by 12 bits
HomBN #3 via element-wise mult on 128 points
[31m25341958 ==> -5695402240[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #4 on 128 points by 12 bits
Time in sec for current matmul = 0.038
-288255174 => 41123758482
[31mMatMul Output Mismatch[0m
Relu #7 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.143
Time in sec for current matmul = 0.039
2570235162 => 65448527168
[31mMatMul Output Mismatch[0m
Relu #9 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.143
Truncate #5 on 128 points by 12 bits
HomBN #4 via element-wise mult on 128 points
[31m31957488 ==> -56888226346[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #6 on 128 points by 12 bits
Time in sec for current matmul = 0.038
-11627810 => 21176860105
[31mMatMul Output Mismatch[0m
Relu #11 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.143
Time in sec for current matmul = 0.04
1323554008 => 3250101930
[31mMatMul Output Mismatch[0m
Relu #13 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.143
Thread i = 0, total data sent till now = 3812952
Thread i = 1, total data sent till now = 1746219
Thread i = 2, total data sent till now = 1731107
Thread i = 3, total data sent till now = 1746219
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 2502306 microseconds.
Total data sent = 1.77389 MiB.
Number of rounds = 205
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 0.273 seconds.
Total time in BatchNorm = 0.176 seconds.
Total time in Truncation = 1.018 seconds.
Total time in Relu = 1.001 seconds.
Total time in MaxPool = 0 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 0.833509 MiB.
BatchNorm data sent = 0.893015 MiB.
Truncation data sent = 0.022049 MiB.
Relu data sent = 0.0253143 MiB.
Maxpool data sent = 0 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793482
793482
793482
793483
793483
793483
793483
793483
793483
793482
793483
793482
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793482
793483
793483
793483
793483
793483
793483
793483
793482
793483
793483
793483
793483
793483
793482
793483
793483
793483
793483
793483
793483
793483
793483
793482
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793482
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793483
793482
793483
793483
793483
793483
793483
793483

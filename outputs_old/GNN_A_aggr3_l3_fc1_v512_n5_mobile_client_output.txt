Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997721
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 2560 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.21
2048 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.706
Truncate #1 on 2560 points by 12 bits
Time in sec for current matmul = 1.034
1024 => 48283894422
[31mMatMul Output Mismatch[0m
Relu #3 on 2560 points, truncate=1 by 12 bits
Time in sec for current relu = 0.719
Maxpool 1 called N=512, H=1, W=1, C=1, ksizeH=1, ksizeW=5
Time in sec for current maxpool = 2.821
Time in sec for current matmul = 0.362
5289745382 => -45329349110
[31mMatMul Output Mismatch[0m
Relu #5 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.707
Truncate #2 on 2560 points by 12 bits
Time in sec for current matmul = 1.095
1024 => 13521502870
[31mMatMul Output Mismatch[0m
Relu #7 on 2560 points, truncate=1 by 12 bits
Time in sec for current relu = 0.718
Maxpool 2 called N=512, H=1, W=1, C=1, ksizeH=1, ksizeW=5
Time in sec for current maxpool = 2.822
Time in sec for current matmul = 0.362
5119350750 => 67531670627
[31mMatMul Output Mismatch[0m
Relu #9 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.707
Truncate #3 on 2560 points by 12 bits
Time in sec for current matmul = 1.097
1024 => 59088421526
[31mMatMul Output Mismatch[0m
Relu #11 on 2560 points, truncate=1 by 12 bits
Time in sec for current relu = 0.718
Maxpool 3 called N=512, H=1, W=1, C=1, ksizeH=1, ksizeW=5
Time in sec for current maxpool = 2.822
Time in sec for current matmul = 0.362
24967622078 => 7871136138
[31mMatMul Output Mismatch[0m
Relu #13 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.708
Thread i = 0, total data sent till now = 11741863
Thread i = 1, total data sent till now = 1995447
Thread i = 2, total data sent till now = 1794167
Thread i = 3, total data sent till now = 1995447
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 23455591 microseconds.
Total data sent = 9.87097 MiB.
Number of rounds = 331
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 4.522 seconds.
Total time in BatchNorm = 0.131 seconds.
Total time in Truncation = 3.264 seconds.
Total time in Relu = 4.983 seconds.
Total time in MaxPool = 8.465 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 9.04933 MiB.
BatchNorm data sent = 0.178633 MiB.
Truncation data sent = 0.210602 MiB.
Relu data sent = 0.264313 MiB.
Maxpool data sent = 0.168091 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
1921665
1921665
1921665
1921665
1921665
1921666
1921665
1921665
1921665
1921666
1921665
1921665
1921666
1921665
1921665
1921666
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921666
1921665
1921665
1921665
1921665
1921665
1921665
1921666
1921665
1921665
1921665
1921665
1921665
1921665
1921666
1921665
1921665
1921665
1921665
1921665
1921666
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921666
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921666
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921666
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921666
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921666
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921666
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921666
1921665
1921665
1921666
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921666
1921665
1921665
1921666
1921665
1921665
1921665
1921665
1921666
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921666
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921666
1921665
1921665
1921665
1921665
1921666
1921665
1921665
1921665
1921665
1921666
1921665
1921665
1921665
1921665
1921665
1921665
1921666
1921665
1921666
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921666
1921665
1921665
1921666
1921665
1921665
1921665
1921665
1921665
1921666
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921666
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921666
1921665
1921665
1921665
1921665
1921666
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921666
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921666
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921666
1921666
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921666
1921665
1921665
1921665
1921665
1921666
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921666
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921666
1921665
1921665
1921665
1921665
1921665
1921666
1921666
1921665
1921666
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
1921665
Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997771
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 2560 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.21
2048 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.706
Truncate #1 on 2560 points by 12 bits
Time in sec for current matmul = 1.042
1024 => -12272814707
[31mMatMul Output Mismatch[0m
Relu #3 on 2560 points, truncate=1 by 12 bits
Time in sec for current relu = 0.719
Maxpool 1 called N=512, H=1, W=1, C=1, ksizeH=1, ksizeW=5
Time in sec for current maxpool = 2.822
Time in sec for current matmul = 0.363
3550334446 => 24910534312
[31mMatMul Output Mismatch[0m
Relu #5 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.707
Truncate #2 on 2560 points by 12 bits
Time in sec for current matmul = 1.085
1024 => 35307369869
[31mMatMul Output Mismatch[0m
Relu #7 on 2560 points, truncate=1 by 12 bits
Time in sec for current relu = 0.718
Maxpool 2 called N=512, H=1, W=1, C=1, ksizeH=1, ksizeW=5
Time in sec for current maxpool = 2.821
Time in sec for current matmul = 0.362
10117449942 => 40816095620
[31mMatMul Output Mismatch[0m
Relu #9 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.707
Truncate #3 on 2560 points by 12 bits
Time in sec for current matmul = 1.096
1024 => 13161444750
[31mMatMul Output Mismatch[0m
Relu #11 on 2560 points, truncate=1 by 12 bits
Time in sec for current relu = 0.717
Maxpool 3 called N=512, H=1, W=1, C=1, ksizeH=1, ksizeW=5
Time in sec for current maxpool = 2.822
Time in sec for current matmul = 0.361
14021054620 => 8603525016
[31mMatMul Output Mismatch[0m
Relu #13 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.707
Thread i = 0, total data sent till now = 11741214
Thread i = 1, total data sent till now = 1995447
Thread i = 2, total data sent till now = 1794167
Thread i = 3, total data sent till now = 1995447
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 23426176 microseconds.
Total data sent = 9.8703 MiB.
Number of rounds = 331
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 4.519 seconds.
Total time in BatchNorm = 0.131 seconds.
Total time in Truncation = 3.264 seconds.
Total time in Relu = 4.981 seconds.
Total time in MaxPool = 8.465 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 9.04866 MiB.
BatchNorm data sent = 0.178635 MiB.
Truncation data sent = 0.210602 MiB.
Relu data sent = 0.264313 MiB.
Maxpool data sent = 0.168091 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100470
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100470
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100470
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100470
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100470
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100470
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100470
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471
2100471

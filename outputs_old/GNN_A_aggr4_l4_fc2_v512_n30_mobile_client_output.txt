Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997767
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 15360 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.214
2048 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.705
Truncate #1 on 15360 points by 12 bits
HomBN #2 via element-wise mult on 15360 points
[31m2 ==> 23373325962[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #2 on 512 points by 12 bits
Time in sec for current matmul = 0.213
-644927254 => 42352181088
[31mMatMul Output Mismatch[0m
Relu #3 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.707
Time in sec for current matmul = 0.214
10588046310 => 17598883574
[31mMatMul Output Mismatch[0m
Relu #5 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.706
Truncate #3 on 15360 points by 12 bits
HomBN #3 via element-wise mult on 15360 points
[31m2 ==> -32528357750[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #4 on 512 points by 12 bits
Time in sec for current matmul = 0.212
-303588654 => -4674536218
[31mMatMul Output Mismatch[0m
Relu #7 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.705
Time in sec for current matmul = 0.212
-1024 => 5586548858
[31mMatMul Output Mismatch[0m
Relu #9 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.705
Truncate #5 on 15360 points by 12 bits
HomBN #4 via element-wise mult on 15360 points
[31m2 ==> -64740612470[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #6 on 512 points by 12 bits
Time in sec for current matmul = 0.215
84094696 => 62534065506
[31mMatMul Output Mismatch[0m
Relu #11 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.706
Time in sec for current matmul = 0.213
15633517412 => -5344604419
[31mMatMul Output Mismatch[0m
Relu #13 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.706
Truncate #7 on 15360 points by 12 bits
HomBN #5 via element-wise mult on 15360 points
[31m2 ==> -27428084086[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #8 on 512 points by 12 bits
Time in sec for current matmul = 0.212
708323518 => -49163112304
[31mMatMul Output Mismatch[0m
Relu #15 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.705
Time in sec for current matmul = 0.214
-1024 => 68223562132
[31mMatMul Output Mismatch[0m
Relu #17 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.705
Thread i = 0, total data sent till now = 10389814
Thread i = 1, total data sent till now = 2502951
Thread i = 2, total data sent till now = 1878391
Thread i = 3, total data sent till now = 2502951
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 19492201 microseconds.
Total data sent = 9.62982 MiB.
Number of rounds = 267
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 1.919 seconds.
Total time in BatchNorm = 1.623 seconds.
Total time in Truncation = 7.182 seconds.
Total time in Relu = 6.35 seconds.
Total time in MaxPool = 0 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 4.28642 MiB.
BatchNorm data sent = 3.57177 MiB.
Truncation data sent = 1.64557 MiB.
Relu data sent = 0.126068 MiB.
Maxpool data sent = 0 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656145
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656145
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656145
16656144
16656144
16656144
16656144
16656145
16656144
16656144
16656144
16656144
16656144
16656145
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656145
16656144
16656145
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656145
16656144
16656144
16656145
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656145
16656144
16656144
16656144
16656144
16656144
16656145
16656144
16656144
16656144
16656144
16656145
16656144
16656144
16656144
16656144
16656145
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656145
16656144
16656144
16656144
16656144
16656145
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656145
16656144
16656145
16656144
16656144
16656144
16656145
16656144
16656145
16656144
16656145
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656145
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656145
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656145
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656145
16656145
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656145
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656145
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656145
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656145
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656145
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656145
16656144
16656144
16656145
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656145
16656144
16656144
16656144
16656144
16656144
16656145
16656144
16656144
16656144
16656145
16656144
16656144
16656144
16656145
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656145
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656145
16656144
16656144
16656144
16656144
16656145
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656144
16656145
16656144
16656144
16656144
16656144
16656144
16656144

Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997787
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 7680 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.067
1024 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.284
Truncate #1 on 7680 points by 12 bits
HomBN #2 via element-wise mult on 7680 points
[31m2 ==> 68222015468[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #2 on 256 points by 12 bits
Time in sec for current matmul = 0.067
252732032 => 43839493622
[31mMatMul Output Mismatch[0m
Relu #3 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.284
Time in sec for current matmul = 0.069
5479937212 => 59364143065
[31mMatMul Output Mismatch[0m
Relu #5 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.284
Truncate #3 on 7680 points by 12 bits
HomBN #3 via element-wise mult on 7680 points
[31m2 ==> 59028101100[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #4 on 256 points by 12 bits
Time in sec for current matmul = 0.068
789839992 => -32586265688
[31mMatMul Output Mismatch[0m
Relu #7 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.284
Time in sec for current matmul = 0.07
-512 => -26768230049
[31mMatMul Output Mismatch[0m
Relu #9 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.284
Truncate #5 on 7680 points by 12 bits
HomBN #4 via element-wise mult on 7680 points
[31m2 ==> -52104177684[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #6 on 256 points by 12 bits
Time in sec for current matmul = 0.07
259972740 => -67068057795
[31mMatMul Output Mismatch[0m
Relu #11 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.284
Time in sec for current matmul = 0.069
-512 => 27066520706
[31mMatMul Output Mismatch[0m
Relu #13 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.284
Thread i = 0, total data sent till now = 5301225
Thread i = 1, total data sent till now = 2018687
Thread i = 2, total data sent till now = 1783671
Thread i = 3, total data sent till now = 2018687
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 5008747 microseconds.
Total data sent = 3.76295 MiB.
Number of rounds = 205
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 0.48 seconds.
Total time in BatchNorm = 0.317 seconds.
Total time in Truncation = 2.137 seconds.
Total time in Relu = 1.988 seconds.
Total time in MaxPool = 0 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 1.66681 MiB.
BatchNorm data sent = 1.42883 MiB.
Truncation data sent = 0.617752 MiB.
Relu data sent = 0.0495605 MiB.
Maxpool data sent = 0 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
6608039
6608038
6608038
6608038
6608038
6608038
6608038
6608038
6608038
6608039
6608038
6608038
6608038
6608038
6608039
6608039
6608038
6608038
6608038
6608039
6608039
6608039
6608038
6608039
6608038
6608039
6608038
6608038
6608038
6608038
6608039
6608039
6608039
6608038
6608038
6608038
6608038
6608038
6608038
6608038
6608039
6608038
6608038
6608038
6608038
6608038
6608038
6608038
6608038
6608038
6608038
6608039
6608038
6608038
6608038
6608039
6608039
6608038
6608038
6608038
6608038
6608038
6608038
6608038
6608038
6608038
6608038
6608038
6608039
6608039
6608039
6608038
6608039
6608038
6608038
6608039
6608038
6608039
6608038
6608039
6608038
6608038
6608038
6608038
6608038
6608038
6608038
6608038
6608038
6608038
6608038
6608039
6608039
6608039
6608038
6608038
6608038
6608038
6608038
6608038
6608038
6608038
6608039
6608038
6608038
6608038
6608039
6608038
6608038
6608039
6608038
6608038
6608038
6608039
6608038
6608038
6608038
6608038
6608039
6608038
6608038
6608038
6608039
6608038
6608038
6608038
6608038
6608038
6608038
6608038
6608038
6608039
6608038
6608038
6608039
6608038
6608038
6608039
6608038
6608038
6608038
6608039
6608038
6608038
6608039
6608038
6608038
6608038
6608039
6608038
6608039
6608038
6608038
6608039
6608038
6608039
6608038
6608038
6608039
6608039
6608038
6608038
6608038
6608039
6608038
6608039
6608038
6608038
6608038
6608038
6608039
6608038
6608039
6608039
6608038
6608039
6608038
6608038
6608039
6608038
6608038
6608038
6608039
6608038
6608038
6608038
6608038
6608038
6608038
6608038
6608038
6608038
6608039
6608038
6608038
6608039
6608039
6608038
6608038
6608038
6608038
6608039
6608038
6608038
6608038
6608039
6608039
6608039
6608039
6608038
6608038
6608039
6608038
6608038
6608038
6608038
6608038
6608038
6608038
6608038
6608038
6608038
6608038
6608038
6608038
6608038
6608038
6608039
6608038
6608039
6608039
6608038
6608038
6608038
6608038
6608038
6608039
6608039
6608038
6608038
6608039
6608038
6608038
6608038
6608038
6608039
6608039
6608038
6608038
6608038
6608038
6608038
6608039
6608039
6608038
6608038

Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997742
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 3840 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.038
512 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.143
Truncate #1 on 3840 points by 12 bits
HomBN #2 via element-wise mult on 3840 points
[31m2 ==> -17227000494[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #2 on 128 points by 12 bits
Time in sec for current matmul = 0.037
-128633820 => -3738465108
[31mMatMul Output Mismatch[0m
Relu #3 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.143
Time in sec for current matmul = 0.037
-256 => -13252957788
[31mMatMul Output Mismatch[0m
Relu #5 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.143
Truncate #3 on 3840 points by 12 bits
HomBN #3 via element-wise mult on 3840 points
[31m2 ==> -10985876142[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #4 on 128 points by 12 bits
Time in sec for current matmul = 0.037
-185781726 => 7734977724
[31mMatMul Output Mismatch[0m
Relu #7 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.142
Time in sec for current matmul = 0.038
483436372 => 20975263513
[31mMatMul Output Mismatch[0m
Relu #9 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.143
Truncate #5 on 3840 points by 12 bits
HomBN #4 via element-wise mult on 3840 points
[31m2 ==> 33104647506[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #6 on 128 points by 12 bits
Time in sec for current matmul = 0.038
84133410 => -45160688836
[31mMatMul Output Mismatch[0m
Relu #11 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.143
Time in sec for current matmul = 0.038
-256 => 68225101567
[31mMatMul Output Mismatch[0m
Relu #13 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.143
Thread i = 0, total data sent till now = 3649539
Thread i = 1, total data sent till now = 1872891
Thread i = 2, total data sent till now = 1755119
Thread i = 3, total data sent till now = 1872891
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 2548197 microseconds.
Total data sent = 1.88251 MiB.
Number of rounds = 205
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 0.263 seconds.
Total time in BatchNorm = 0.156 seconds.
Total time in Truncation = 1.077 seconds.
Total time in Relu = 1 seconds.
Total time in MaxPool = 0 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 0.833359 MiB.
BatchNorm data sent = 0.714383 MiB.
Truncation data sent = 0.309456 MiB.
Relu data sent = 0.0253143 MiB.
Maxpool data sent = 0 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656519
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656519
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656519
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656520
16656519
16656520

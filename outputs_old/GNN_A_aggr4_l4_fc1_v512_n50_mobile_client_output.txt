Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997806
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 25600 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.202
2048 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.705
Truncate #1 on 25600 points by 12 bits
HomBN #2 via element-wise mult on 25600 points
[31m2 ==> 54274505014[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #2 on 512 points by 12 bits
Time in sec for current matmul = 0.21
-517810830 => -9066604384
[31mMatMul Output Mismatch[0m
Relu #3 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.706
Truncate #3 on 25600 points by 12 bits
HomBN #3 via element-wise mult on 25600 points
[31m2 ==> -12565923530[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #4 on 512 points by 12 bits
Time in sec for current matmul = 0.213
-154808992 => -36592205074
[31mMatMul Output Mismatch[0m
Relu #5 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.705
Truncate #5 on 25600 points by 12 bits
HomBN #4 via element-wise mult on 25600 points
[31m2 ==> -5183948490[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #6 on 512 points by 12 bits
Time in sec for current matmul = 0.214
221367658 => -55941341758
[31mMatMul Output Mismatch[0m
Relu #7 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.705
Truncate #7 on 25600 points by 12 bits
HomBN #5 via element-wise mult on 25600 points
[31m2 ==> -50348213962[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #8 on 512 points by 12 bits
Time in sec for current matmul = 0.214
-417051290 => 57522372196
[31mMatMul Output Mismatch[0m
Relu #9 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.705
Thread i = 0, total data sent till now = 11282762
Thread i = 1, total data sent till now = 2944807
Thread i = 2, total data sent till now = 1959991
Thread i = 3, total data sent till now = 2944807
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 15301450 microseconds.
Total data sent = 11.402 MiB.
Number of rounds = 195
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 1.053 seconds.
Total time in BatchNorm = 2.471 seconds.
Total time in Truncation = 6.494 seconds.
Total time in Relu = 3.526 seconds.
Total time in MaxPool = 0 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 2.38136 MiB.
BatchNorm data sent = 6.25054 MiB.
Truncation data sent = 2.70001 MiB.
Relu data sent = 0.0700378 MiB.
Maxpool data sent = 0 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043548
14043549
14043549
14043549
14043548
14043549
14043549
14043549
14043549
14043549
14043548
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043548
14043549
14043549
14043549
14043548
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043548
14043549
14043549
14043549
14043549
14043549
14043549
14043548
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043548
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043548
14043549
14043548
14043549
14043549
14043548
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043548
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043548
14043549
14043548
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043548
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043548
14043549
14043549
14043549
14043548
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043548
14043548
14043548
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043548
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043548
14043548
14043549
14043548
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043548
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043548
14043549
14043549
14043549
14043548
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043548
14043549
14043549
14043549
14043548
14043549
14043549
14043549
14043549
14043549
14043548
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043548
14043549
14043549
14043548
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043548
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043548
14043549
14043549
14043549
14043549
14043548
14043549
14043548
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043548
14043548
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043548
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043548
14043549
14043549
14043548
14043549
14043549
14043549
14043549
14043548
14043548
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043548
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043548
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549
14043549

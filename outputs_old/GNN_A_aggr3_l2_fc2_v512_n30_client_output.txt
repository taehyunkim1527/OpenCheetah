Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997775
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 15360 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.033
2048 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.004
Truncate #1 on 15360 points by 12 bits
Time in sec for current matmul = 1.268
1024 => -13319604104
[31mMatMul Output Mismatch[0m
Relu #3 on 15360 points, truncate=1 by 12 bits
Time in sec for current relu = 0.057
Maxpool 1 called N=512, H=1, W=1, C=1, ksizeH=1, ksizeW=30
Time in sec for current maxpool = 0.052
Time in sec for current matmul = 0.044
2976989996 => -59171243520
[31mMatMul Output Mismatch[0m
Relu #5 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.013
Time in sec for current matmul = 0.043
-1024 => -13839329587
[31mMatMul Output Mismatch[0m
Relu #7 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.004
Truncate #2 on 15360 points by 12 bits
Time in sec for current matmul = 1.378
1024 => -53920466824
[31mMatMul Output Mismatch[0m
Relu #9 on 15360 points, truncate=1 by 12 bits
Time in sec for current relu = 0.051
Maxpool 2 called N=512, H=1, W=1, C=1, ksizeH=1, ksizeW=30
Time in sec for current maxpool = 0.051
Time in sec for current matmul = 0.038
3104978586 => 25725048519
[31mMatMul Output Mismatch[0m
Relu #11 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.011
Time in sec for current matmul = 0.042
6431263128 => 50066588600
[31mMatMul Output Mismatch[0m
Relu #13 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.003
Thread i = 0, total data sent till now = 35476493
Thread i = 1, total data sent till now = 2792551
Thread i = 2, total data sent till now = 1995447
Thread i = 3, total data sent till now = 2792551
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 3447224 microseconds.
Total data sent = 34.2183 MiB.
Number of rounds = 963
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 2.846 seconds.
Total time in BatchNorm = 0.03 seconds.
Total time in Truncation = 0.156 seconds.
Total time in Relu = 0.143 seconds.
Total time in MaxPool = 0.103 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 30.9565 MiB.
BatchNorm data sent = 0.714527 MiB.
Truncation data sent = 0.833191 MiB.
Relu data sent = 0.901642 MiB.
Maxpool data sent = 0.812439 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
12223289
12223290
12223290
12223289
12223289
12223290
12223289
12223289
12223289
12223289
12223289
12223290
12223289
12223289
12223289
12223290
12223290
12223290
12223289
12223289
12223290
12223289
12223289
12223289
12223289
12223289
12223290
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223290
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223290
12223289
12223290
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223290
12223290
12223289
12223289
12223290
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223290
12223289
12223289
12223290
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223290
12223289
12223290
12223289
12223289
12223289
12223290
12223289
12223289
12223290
12223290
12223290
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223290
12223289
12223290
12223290
12223289
12223289
12223290
12223289
12223290
12223289
12223289
12223289
12223290
12223289
12223289
12223289
12223289
12223289
12223290
12223289
12223289
12223289
12223289
12223290
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223290
12223289
12223289
12223290
12223289
12223290
12223289
12223290
12223289
12223289
12223289
12223289
12223289
12223290
12223289
12223290
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223290
12223290
12223290
12223289
12223289
12223289
12223289
12223289
12223289
12223290
12223289
12223289
12223289
12223290
12223290
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223290
12223290
12223289
12223290
12223290
12223290
12223289
12223289
12223289
12223289
12223290
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223290
12223289
12223289
12223289
12223289
12223289
12223290
12223289
12223289
12223289
12223290
12223289
12223290
12223289
12223289
12223289
12223289
12223290
12223289
12223289
12223290
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223290
12223289
12223290
12223289
12223289
12223289
12223289
12223289
12223289
12223290
12223289
12223289
12223290
12223289
12223289
12223289
12223290
12223289
12223289
12223289
12223290
12223289
12223290
12223289
12223289
12223289
12223290
12223289
12223289
12223290
12223290
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223290
12223290
12223289
12223289
12223290
12223289
12223289
12223289
12223289
12223289
12223289
12223290
12223290
12223289
12223289
12223289
12223290
12223289
12223289
12223289
12223289
12223290
12223289
12223290
12223289
12223289
12223289
12223289
12223289
12223290
12223290
12223289
12223289
12223290
12223289
12223290
12223289
12223290
12223289
12223290
12223289
12223289
12223289
12223290
12223290
12223290
12223289
12223289
12223290
12223289
12223289
12223289
12223290
12223289
12223289
12223290
12223289
12223289
12223289
12223289
12223289
12223290
12223289
12223289
12223289
12223289
12223290
12223289
12223289
12223290
12223289
12223289
12223289
12223289
12223290
12223289
12223289
12223289
12223290
12223289
12223289
12223289
12223290
12223290
12223289
12223289
12223289
12223289
12223289
12223290
12223289
12223289
12223289
12223290
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223290
12223290
12223289
12223289
12223289
12223290
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223290
12223289
12223290
12223289
12223289
12223289
12223289
12223289
12223290
12223289
12223290
12223290
12223290
12223289
12223289
12223290
12223290
12223289
12223290
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223290
12223289
12223289
12223289
12223290
12223289
12223289
12223290
12223289
12223289
12223289
12223289
12223289
12223290
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223290
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223290
12223290
12223289
12223289
12223289
12223289
12223289
12223290
12223290
12223289
12223290
12223289
12223289
12223290
12223289
12223289
12223289
12223290
12223289
12223289
12223289
12223289
12223289
12223289
12223290
12223289
12223289
12223289
12223289
12223289
12223289
12223289
12223289
Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997741
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 15360 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.036
2048 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.004
Truncate #1 on 15360 points by 12 bits
Time in sec for current matmul = 1.298
1024 => 14925197126
[31mMatMul Output Mismatch[0m
Relu #3 on 15360 points, truncate=1 by 12 bits
Time in sec for current relu = 0.049
Maxpool 1 called N=512, H=1, W=1, C=1, ksizeH=1, ksizeW=30
Time in sec for current maxpool = 0.051
Time in sec for current matmul = 0.045
2254630500 => -56355619046
[31mMatMul Output Mismatch[0m
Relu #5 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.011
Time in sec for current matmul = 0.038
-1024 => 11173573766
[31mMatMul Output Mismatch[0m
Relu #7 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.004
Truncate #2 on 15360 points by 12 bits
Time in sec for current matmul = 1.366
1024 => -40842268858
[31mMatMul Output Mismatch[0m
Relu #9 on 15360 points, truncate=1 by 12 bits
Time in sec for current relu = 0.05
Maxpool 2 called N=512, H=1, W=1, C=1, ksizeH=1, ksizeW=30
Time in sec for current maxpool = 0.053
Time in sec for current matmul = 0.049
6776807708 => -27943403438
[31mMatMul Output Mismatch[0m
Relu #11 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.01
Time in sec for current matmul = 0.04
-1024 => 19270641392
[31mMatMul Output Mismatch[0m
Relu #13 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.004
Thread i = 0, total data sent till now = 35476931
Thread i = 1, total data sent till now = 2792551
Thread i = 2, total data sent till now = 1995447
Thread i = 3, total data sent till now = 2792551
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 3419798 microseconds.
Total data sent = 34.2188 MiB.
Number of rounds = 963
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 2.872 seconds.
Total time in BatchNorm = 0.03 seconds.
Total time in Truncation = 0.12 seconds.
Total time in Relu = 0.132 seconds.
Total time in MaxPool = 0.104 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 30.957 MiB.
BatchNorm data sent = 0.714495 MiB.
Truncation data sent = 0.833191 MiB.
Relu data sent = 0.901642 MiB.
Maxpool data sent = 0.812439 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
4704748
4704747
4704748
4704747
4704748
4704747
4704747
4704747
4704748
4704748
4704748
4704747
4704748
4704748
4704747
4704748
4704748
4704748
4704747
4704748
4704748
4704748
4704748
4704747
4704748
4704748
4704748
4704748
4704747
4704748
4704747
4704747
4704747
4704747
4704747
4704747
4704747
4704747
4704748
4704747
4704748
4704748
4704747
4704748
4704747
4704747
4704747
4704748
4704747
4704747
4704747
4704748
4704747
4704747
4704747
4704747
4704747
4704747
4704748
4704747
4704747
4704748
4704748
4704748
4704747
4704748
4704747
4704747
4704748
4704747
4704747
4704748
4704748
4704748
4704747
4704747
4704748
4704747
4704747
4704748
4704748
4704748
4704747
4704747
4704747
4704748
4704748
4704747
4704748
4704747
4704748
4704747
4704747
4704747
4704747
4704748
4704748
4704747
4704747
4704748
4704748
4704748
4704747
4704748
4704747
4704747
4704748
4704747
4704748
4704747
4704748
4704747
4704747
4704747
4704747
4704747
4704747
4704747
4704747
4704748
4704747
4704747
4704747
4704748
4704747
4704748
4704747
4704748
4704747
4704747
4704748
4704747
4704748
4704747
4704747
4704748
4704748
4704747
4704748
4704748
4704748
4704748
4704748
4704747
4704747
4704748
4704747
4704747
4704747
4704747
4704748
4704747
4704748
4704748
4704747
4704748
4704748
4704747
4704747
4704747
4704748
4704748
4704747
4704748
4704748
4704748
4704747
4704748
4704747
4704747
4704747
4704747
4704747
4704747
4704748
4704747
4704748
4704747
4704748
4704747
4704748
4704747
4704748
4704748
4704747
4704747
4704747
4704748
4704748
4704748
4704747
4704748
4704747
4704747
4704748
4704748
4704747
4704747
4704748
4704747
4704747
4704748
4704748
4704748
4704748
4704748
4704748
4704747
4704748
4704747
4704747
4704748
4704748
4704747
4704747
4704747
4704747
4704747
4704747
4704748
4704748
4704747
4704747
4704747
4704747
4704747
4704748
4704747
4704747
4704747
4704748
4704747
4704748
4704748
4704748
4704748
4704747
4704748
4704748
4704747
4704747
4704747
4704747
4704747
4704747
4704748
4704748
4704747
4704747
4704747
4704747
4704747
4704748
4704747
4704748
4704747
4704747
4704748
4704747
4704747
4704747
4704747
4704747
4704748
4704747
4704747
4704747
4704747
4704747
4704748
4704747
4704748
4704747
4704748
4704748
4704747
4704748
4704747
4704748
4704747
4704747
4704747
4704747
4704747
4704747
4704747
4704748
4704747
4704748
4704747
4704747
4704747
4704747
4704748
4704748
4704747
4704748
4704747
4704747
4704747
4704748
4704748
4704748
4704748
4704747
4704747
4704748
4704747
4704747
4704748
4704748
4704747
4704747
4704748
4704748
4704748
4704747
4704747
4704747
4704748
4704748
4704747
4704747
4704747
4704748
4704747
4704747
4704747
4704748
4704747
4704748
4704747
4704748
4704747
4704748
4704748
4704747
4704747
4704747
4704747
4704748
4704748
4704748
4704747
4704747
4704747
4704748
4704748
4704748
4704747
4704747
4704748
4704748
4704748
4704748
4704748
4704747
4704747
4704748
4704747
4704747
4704747
4704747
4704748
4704747
4704747
4704747
4704748
4704748
4704747
4704747
4704747
4704747
4704748
4704747
4704747
4704748
4704747
4704748
4704748
4704747
4704747
4704748
4704748
4704748
4704747
4704748
4704747
4704748
4704748
4704748
4704747
4704747
4704747
4704748
4704747
4704747
4704747
4704748
4704747
4704748
4704747
4704748
4704748
4704748
4704747
4704748
4704748
4704748
4704747
4704747
4704747
4704747
4704747
4704747
4704747
4704747
4704747
4704747
4704747
4704747
4704747
4704747
4704748
4704748
4704747
4704748
4704748
4704748
4704747
4704747
4704747
4704748
4704747
4704748
4704748
4704748
4704747
4704748
4704748
4704747
4704747
4704747
4704748
4704748
4704748
4704748
4704748
4704747
4704748
4704747
4704747
4704747
4704747
4704748
4704748
4704747
4704748
4704748
4704748
4704748
4704747
4704747
4704747
4704747
4704747
4704748
4704747
4704748
4704747
4704747
4704747
4704748
4704747
4704747
4704748
4704747
4704747
4704747
4704748
4704747
4704747
4704748
4704747
4704748
4704748
4704748
4704747
4704748
4704748
4704748
4704748
4704748
4704747
4704747
4704748
4704748
4704747
4704748
4704748
4704747
4704747
4704747
4704748
4704747
4704748
4704747
4704748
4704748
4704747
4704748
4704747

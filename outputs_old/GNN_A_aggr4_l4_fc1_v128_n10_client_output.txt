Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997765
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 1280 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.01
512 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.001
Truncate #1 on 1280 points by 12 bits
HomBN #2 via element-wise mult on 1280 points
[31m2 ==> 49387598736[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #2 on 128 points by 12 bits
Time in sec for current matmul = 0.013
389111310 => 21958320294
[31mMatMul Output Mismatch[0m
Relu #3 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.001
Truncate #3 on 1280 points by 12 bits
HomBN #3 via element-wise mult on 1280 points
[31m2 ==> -35370896496[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #4 on 128 points by 12 bits
Time in sec for current matmul = 0.013
-345574354 => -63151472500
[31mMatMul Output Mismatch[0m
Relu #5 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.001
Truncate #5 on 1280 points by 12 bits
HomBN #4 via element-wise mult on 1280 points
[31m2 ==> 50260013968[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #6 on 128 points by 12 bits
Time in sec for current matmul = 0.015
-313467866 => 63569782190
[31mMatMul Output Mismatch[0m
Relu #7 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.001
Truncate #7 on 1280 points by 12 bits
HomBN #5 via element-wise mult on 1280 points
[31m2 ==> -60066958448[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #8 on 128 points by 12 bits
Time in sec for current matmul = 0.017
160119956 => 61277261016
[31mMatMul Output Mismatch[0m
Relu #9 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.001
Thread i = 0, total data sent till now = 3573002
Thread i = 1, total data sent till now = 1798515
Thread i = 2, total data sent till now = 1740739
Thread i = 3, total data sent till now = 1798515
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 187030 microseconds.
Total data sent = 1.65392 MiB.
Number of rounds = 195
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 0.068 seconds.
Total time in BatchNorm = 0.054 seconds.
Total time in Truncation = 0.043 seconds.
Total time in Relu = 0.005 seconds.
Total time in MaxPool = 0 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 0.595421 MiB.
BatchNorm data sent = 0.893022 MiB.
Truncation data sent = 0.1474 MiB.
Relu data sent = 0.0180817 MiB.
Maxpool data sent = 0 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
14960269
14960270
14960270
14960270
14960270
14960270
14960270
14960270
14960270
14960270
14960269
14960270
14960270
14960270
14960270
14960270
14960269
14960270
14960270
14960269
14960270
14960269
14960270
14960270
14960270
14960270
14960270
14960270
14960270
14960269
14960270
14960270
14960270
14960270
14960270
14960269
14960270
14960270
14960270
14960269
14960270
14960270
14960270
14960269
14960270
14960270
14960270
14960269
14960270
14960270
14960270
14960270
14960270
14960269
14960270
14960270
14960269
14960270
14960270
14960270
14960270
14960270
14960270
14960270
14960270
14960270
14960270
14960270
14960270
14960270
14960270
14960270
14960270
14960270
14960270
14960270
14960270
14960270
14960270
14960270
14960269
14960270
14960270
14960270
14960270
14960269
14960270
14960270
14960270
14960270
14960270
14960270
14960270
14960270
14960270
14960270
14960270
14960270
14960270
14960270
14960270
14960269
14960269
14960270
14960270
14960270
14960270
14960270
14960270
14960270
14960269
14960270
14960270
14960270
14960270
14960270
14960270
14960270
14960270
14960269
14960270
14960270
14960270
14960270
14960270
14960269
14960270
14960270

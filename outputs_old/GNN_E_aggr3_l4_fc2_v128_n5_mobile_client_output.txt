Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997775
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
Time in sec for current matmul = 0.117
1536 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.703
Time in sec for current matmul = 0.121
256 => 34469964343
[31mMatMul Output Mismatch[0m
Relu #3 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.703
Time in sec for current matmul = 0.121
2154374046 => -45782365858
[31mMatMul Output Mismatch[0m
Relu #5 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.703
Time in sec for current matmul = 0.12
-256 => -10738961096
[31mMatMul Output Mismatch[0m
Relu #7 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.703
Time in sec for current matmul = 0.12
768 => 50737554245
[31mMatMul Output Mismatch[0m
Relu #9 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.703
Time in sec for current matmul = 0.12
3171097400 => -16015870728
[31mMatMul Output Mismatch[0m
Relu #11 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.703
Time in sec for current matmul = 0.121
768 => 52522835518
[31mMatMul Output Mismatch[0m
Relu #13 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.703
Time in sec for current matmul = 0.122
3282677476 => 46498305024
[31mMatMul Output Mismatch[0m
Relu #15 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.703
Thread i = 0, total data sent till now = 3000053
Thread i = 1, total data sent till now = 1738759
Thread i = 2, total data sent till now = 1729799
Thread i = 3, total data sent till now = 1738759
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 8275811 microseconds.
Total data sent = 0.983099 MiB.
Number of rounds = 143
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 0.962 seconds.
Total time in BatchNorm = 0 seconds.
Total time in Truncation = 1.6 seconds.
Total time in Relu = 5.624 seconds.
Total time in MaxPool = 0 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 0.952459 MiB.
BatchNorm data sent = 0 MiB.
Truncation data sent = 0.00170898 MiB.
Relu data sent = 0.0289307 MiB.
Maxpool data sent = 0 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
11352126
11352126
11352126
11352126
11352127
11352126
11352126
11352127
11352126
11352126
11352126
11352127
11352127
11352126
11352126
11352126
11352127
11352126
11352126
11352126
11352126
11352126
11352126
11352126
11352126
11352126
11352126
11352127
11352126
11352127
11352126
11352126
11352126
11352126
11352126
11352127
11352126
11352126
11352126
11352126
11352127
11352126
11352126
11352126
11352127
11352126
11352126
11352126
11352127
11352126
11352126
11352127
11352126
11352126
11352126
11352126
11352126
11352126
11352126
11352126
11352126
11352126
11352126
11352126
11352126
11352126
11352126
11352127
11352126
11352126
11352127
11352126
11352126
11352126
11352126
11352126
11352127
11352127
11352126
11352126
11352126
11352126
11352126
11352126
11352127
11352127
11352126
11352127
11352126
11352126
11352126
11352126
11352126
11352126
11352127
11352127
11352126
11352126
11352127
11352126
11352126
11352126
11352126
11352126
11352127
11352126
11352126
11352127
11352126
11352126
11352126
11352126
11352126
11352126
11352127
11352126
11352126
11352127
11352127
11352126
11352126
11352126
11352126
11352126
11352126
11352127
11352126
11352127

Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997836
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 51200 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.209
2048 => -1
[31mMatMul Output Mismatch[0m
Relu #1 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.706
Truncate #1 on 51200 points by 12 bits
HomBN #2 via element-wise mult on 51200 points
[31m2 ==> -41998352064[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #2 on 512 points by 12 bits
Time in sec for current matmul = 0.212
-353351888 => 41724675455
[31mMatMul Output Mismatch[0m
Relu #3 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.705
Time in sec for current matmul = 0.214
10431169918 => -23488458458
[31mMatMul Output Mismatch[0m
Relu #5 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.705
Truncate #3 on 51200 points by 12 bits
HomBN #3 via element-wise mult on 51200 points
[31m2 ==> 36720345408[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #4 on 512 points by 12 bits
Time in sec for current matmul = 0.209
-393560238 => 35111618932
[31mMatMul Output Mismatch[0m
Relu #7 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.707
Time in sec for current matmul = 0.213
8777905790 => -52291861424
[31mMatMul Output Mismatch[0m
Relu #9 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.705
Truncate #5 on 51200 points by 12 bits
HomBN #4 via element-wise mult on 51200 points
[31m2 ==> -21731475136[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #6 on 512 points by 12 bits
Time in sec for current matmul = 0.214
232800080 => 29237906180
[31mMatMul Output Mismatch[0m
Relu #11 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.705
Time in sec for current matmul = 0.207
7309477590 => -26585072110
[31mMatMul Output Mismatch[0m
Relu #13 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.705
Truncate #7 on 51200 points by 12 bits
HomBN #5 via element-wise mult on 51200 points
[31m2 ==> -63003426496[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #8 on 512 points by 12 bits
Time in sec for current matmul = 0.212
986005340 => -5864567890
[31mMatMul Output Mismatch[0m
Relu #15 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.705
Time in sec for current matmul = 0.208
-1024 => 424725056
[31mMatMul Output Mismatch[0m
Relu #17 on 512 points, truncate=1 by 12 bits
Time in sec for current relu = 0.705
Thread i = 0, total data sent till now = 19126179
Thread i = 1, total data sent till now = 4133671
Thread i = 2, total data sent till now = 2187511
Thread i = 3, total data sent till now = 4133671
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 22894374 microseconds.
Total data sent = 21.3666 MiB.
Number of rounds = 267
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 1.898 seconds.
Total time in BatchNorm = 3.844 seconds.
Total time in Truncation = 7.723 seconds.
Total time in Relu = 6.348 seconds.
Total time in MaxPool = 0 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 4.2862 MiB.
BatchNorm data sent = 11.6088 MiB.
Truncation data sent = 5.34552 MiB.
Relu data sent = 0.126068 MiB.
Maxpool data sent = 0 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
103693
103694
103693
103694
103694
103694
103694
103694
103693
103694
103693
103693
103694
103694
103693
103694
103694
103694
103693
103694
103694
103694
103693
103694
103693
103694
103693
103694
103694
103693
103694
103693
103694
103694
103693
103693
103694
103694
103694
103694
103694
103693
103693
103693
103694
103693
103694
103693
103694
103694
103694
103694
103693
103694
103694
103694
103694
103694
103694
103694
103694
103694
103694
103694
103694
103694
103694
103694
103693
103693
103694
103693
103694
103694
103694
103693
103694
103694
103694
103694
103694
103693
103694
103694
103693
103693
103693
103693
103693
103694
103694
103693
103694
103694
103693
103693
103694
103693
103694
103694
103694
103694
103694
103693
103693
103694
103694
103693
103694
103694
103694
103693
103693
103694
103693
103694
103693
103693
103694
103694
103693
103694
103694
103693
103693
103694
103694
103693
103694
103694
103693
103694
103693
103693
103694
103693
103693
103693
103693
103694
103693
103694
103693
103694
103694
103693
103694
103694
103694
103694
103694
103694
103694
103693
103693
103694
103694
103693
103694
103694
103694
103694
103694
103694
103693
103694
103694
103693
103693
103693
103693
103693
103694
103693
103694
103694
103693
103694
103694
103694
103694
103693
103694
103693
103694
103693
103694
103693
103693
103693
103694
103694
103693
103693
103693
103694
103694
103693
103694
103694
103693
103694
103694
103693
103694
103693
103694
103694
103694
103693
103693
103693
103693
103694
103693
103694
103694
103694
103693
103694
103694
103693
103693
103694
103694
103693
103693
103694
103694
103693
103694
103694
103694
103693
103694
103694
103694
103693
103693
103693
103694
103693
103694
103693
103694
103694
103694
103694
103694
103694
103694
103693
103694
103694
103694
103693
103694
103694
103693
103693
103693
103694
103693
103694
103693
103694
103693
103694
103694
103693
103694
103693
103694
103694
103694
103694
103693
103694
103694
103694
103694
103693
103694
103694
103694
103694
103694
103694
103694
103694
103693
103694
103693
103693
103694
103694
103693
103694
103694
103694
103693
103693
103693
103693
103694
103693
103693
103694
103694
103693
103694
103693
103694
103694
103693
103694
103694
103693
103694
103693
103694
103694
103693
103694
103694
103694
103694
103693
103694
103693
103694
103693
103693
103693
103693
103693
103693
103693
103694
103693
103694
103694
103694
103693
103693
103693
103693
103694
103693
103693
103694
103694
103694
103693
103693
103694
103694
103694
103694
103694
103693
103694
103693
103693
103694
103694
103694
103693
103693
103693
103694
103694
103694
103693
103693
103694
103694
103693
103694
103694
103694
103693
103693
103694
103693
103693
103694
103694
103694
103694
103694
103694
103694
103693
103694
103694
103694
103694
103694
103694
103694
103694
103693
103693
103694
103694
103694
103694
103694
103694
103694
103694
103693
103694
103694
103693
103694
103693
103694
103694
103694
103694
103693
103693
103693
103693
103693
103694
103694
103694
103694
103693
103693
103694
103694
103694
103693
103694
103693
103694
103693
103693
103694
103694
103694
103694
103693
103693
103694
103693
103694
103694
103694
103693
103694
103694
103693
103694
103693
103693
103693
103694
103693
103694
103694
103693
103694
103693
103694
103693
103694
103694
103694
103693
103694
103693
103694
103693
103694
103694
103693
103694
103694
103693
103693
103694
103693
103694
103694
103693
103694
103693
103694
103693
103694
103694
103694
103694
103694
103694
103694
103694
103694
103693
103694
103694
103694
103693
103693
103693
103693
103694

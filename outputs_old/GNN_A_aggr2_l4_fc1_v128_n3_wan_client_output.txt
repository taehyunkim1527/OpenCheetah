Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997804
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 384 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.059
512 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.283
Truncate #1 on 128 points by 12 bits
HomBN #2 via element-wise mult on 128 points
[31m12 ==> 39176417266[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #2 on 128 points by 12 bits
Time in sec for current matmul = 0.058
198621348 => -13687113884
[31mMatMul Output Mismatch[0m
Relu #3 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.283
Truncate #3 on 128 points by 12 bits
HomBN #3 via element-wise mult on 128 points
[31m8 ==> 29829856398[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #4 on 128 points by 12 bits
Time in sec for current matmul = 0.059
234463594 => -40313864556
[31mMatMul Output Mismatch[0m
Relu #5 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.283
Truncate #5 on 128 points by 12 bits
HomBN #4 via element-wise mult on 128 points
[31m8 ==> -5039162184[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #6 on 128 points by 12 bits
Time in sec for current matmul = 0.058
-181103786 => 66637893814
[31mMatMul Output Mismatch[0m
Relu #7 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.283
Truncate #7 on 128 points by 12 bits
HomBN #5 via element-wise mult on 128 points
[31m32538046 ==> -12674252054[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #8 on 128 points by 12 bits
Time in sec for current matmul = 0.057
39518760 => 47284810057
[31mMatMul Output Mismatch[0m
Relu #9 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.283
Thread i = 0, total data sent till now = 3562996
Thread i = 1, total data sent till now = 1746099
Thread i = 2, total data sent till now = 1730803
Thread i = 3, total data sent till now = 1746099
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 4339622 microseconds.
Total data sent = 1.53489 MiB.
Number of rounds = 195
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 0.291 seconds.
Total time in BatchNorm = 0.272 seconds.
Total time in Truncation = 2.344 seconds.
Total time in Relu = 1.415 seconds.
Total time in MaxPool = 0 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 0.59542 MiB.
BatchNorm data sent = 0.892919 MiB.
Truncation data sent = 0.0284729 MiB.
Relu data sent = 0.0180817 MiB.
Maxpool data sent = 0 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544145
11544144
11544144
11544145
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544145
11544144
11544144
11544144
11544144
11544145
11544144
11544144
11544144
11544145
11544144
11544144
11544144
11544145
11544144
11544144
11544144
11544144
11544144
11544145
11544144
11544144
11544144
11544144
11544145
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544144
11544145
11544144
11544144
11544144
11544144
11544144
11544144

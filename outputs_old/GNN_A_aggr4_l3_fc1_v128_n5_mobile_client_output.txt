Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997775
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 640 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.126
512 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.703
Truncate #1 on 640 points by 12 bits
HomBN #2 via element-wise mult on 640 points
[31m2 ==> -42180865844[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #2 on 128 points by 12 bits
Time in sec for current matmul = 0.119
50414090 => 23033589954
[31mMatMul Output Mismatch[0m
Relu #3 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.703
Truncate #3 on 640 points by 12 bits
HomBN #3 via element-wise mult on 640 points
[31m2 ==> 10432483532[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #4 on 128 points by 12 bits
Time in sec for current matmul = 0.119
-106771166 => -42879700301
[31mMatMul Output Mismatch[0m
Relu #5 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.703
Truncate #5 on 640 points by 12 bits
HomBN #4 via element-wise mult on 640 points
[31m2 ==> 68682977484[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #6 on 128 points by 12 bits
Time in sec for current matmul = 0.12
39010302 => 54538059902
[31mMatMul Output Mismatch[0m
Relu #7 on 128 points, truncate=1 by 12 bits
Time in sec for current relu = 0.703
Thread i = 0, total data sent till now = 3253168
Thread i = 1, total data sent till now = 1758999
Thread i = 2, total data sent till now = 1733087
Thread i = 3, total data sent till now = 1758999
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 8291731 microseconds.
Total data sent = 1.26623 MiB.
Number of rounds = 151
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 0.484 seconds.
Total time in BatchNorm = 0.516 seconds.
Total time in Truncation = 4.428 seconds.
Total time in Relu = 2.812 seconds.
Total time in MaxPool = 0 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 0.476281 MiB.
BatchNorm data sent = 0.714432 MiB.
Truncation data sent = 0.0610504 MiB.
Relu data sent = 0.0144653 MiB.
Maxpool data sent = 0 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314958
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314958
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314957
13314958
13314957
13314957
13314957
13314957
13314957
13314957
13314957

Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997739
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 768 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.045
1024 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.144
Truncate #1 on 256 points by 12 bits
HomBN #2 via element-wise mult on 256 points
[31m12 ==> -29451550540[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #2 on 256 points by 12 bits
Time in sec for current matmul = 0.054
49380132 => 5659927502
[31mMatMul Output Mismatch[0m
Relu #3 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.144
Time in sec for current matmul = 0.052
707491448 => -64240058620
[31mMatMul Output Mismatch[0m
Relu #5 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.144
Truncate #3 on 256 points by 12 bits
HomBN #3 via element-wise mult on 256 points
[31m8 ==> 36701878916[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #4 on 256 points by 12 bits
Time in sec for current matmul = 0.052
57019152 => 2201953092
[31mMatMul Output Mismatch[0m
Relu #7 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.144
Time in sec for current matmul = 0.056
275244644 => -20489655078
[31mMatMul Output Mismatch[0m
Relu #9 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.144
Truncate #5 on 256 points by 12 bits
HomBN #4 via element-wise mult on 256 points
[31m8 ==> -62326329176[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #6 on 256 points by 12 bits
Time in sec for current matmul = 0.053
-304616080 => -25028233342
[31mMatMul Output Mismatch[0m
Relu #11 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.144
Time in sec for current matmul = 0.053
-512 => 62140864762
[31mMatMul Output Mismatch[0m
Relu #13 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.144
Thread i = 0, total data sent till now = 4504030
Thread i = 1, total data sent till now = 1765343
Thread i = 2, total data sent till now = 1735647
Thread i = 3, total data sent till now = 1765343
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 2700116 microseconds.
Total data sent = 2.47372 MiB.
Number of rounds = 205
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 0.365 seconds.
Total time in BatchNorm = 0.144 seconds.
Total time in Truncation = 1.024 seconds.
Total time in Relu = 1.008 seconds.
Total time in MaxPool = 0 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 1.66689 MiB.
BatchNorm data sent = 0.714335 MiB.
Truncation data sent = 0.0429382 MiB.
Relu data sent = 0.0495605 MiB.
Maxpool data sent = 0 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
15171110
15171110
15171111
15171110
15171111
15171111
15171111
15171111
15171111
15171110
15171110
15171111
15171111
15171111
15171111
15171111
15171111
15171111
15171110
15171111
15171111
15171111
15171110
15171111
15171111
15171111
15171110
15171111
15171110
15171111
15171111
15171111
15171110
15171110
15171110
15171110
15171111
15171110
15171111
15171110
15171111
15171110
15171110
15171111
15171111
15171110
15171111
15171110
15171111
15171110
15171111
15171110
15171110
15171110
15171110
15171111
15171111
15171110
15171110
15171110
15171111
15171111
15171110
15171111
15171111
15171110
15171111
15171110
15171111
15171110
15171111
15171110
15171111
15171110
15171111
15171111
15171110
15171111
15171111
15171111
15171111
15171111
15171111
15171110
15171110
15171111
15171111
15171111
15171110
15171110
15171110
15171111
15171111
15171111
15171111
15171110
15171110
15171110
15171111
15171110
15171111
15171110
15171110
15171110
15171111
15171111
15171110
15171110
15171111
15171111
15171111
15171111
15171110
15171111
15171110
15171110
15171110
15171110
15171111
15171110
15171111
15171110
15171110
15171111
15171111
15171111
15171111
15171111
15171110
15171111
15171110
15171110
15171110
15171111
15171110
15171110
15171110
15171111
15171110
15171111
15171110
15171110
15171111
15171110
15171111
15171111
15171110
15171110
15171111
15171110
15171111
15171111
15171111
15171111
15171110
15171110
15171111
15171110
15171111
15171110
15171111
15171111
15171110
15171111
15171110
15171111
15171110
15171111
15171111
15171110
15171110
15171111
15171110
15171110
15171110
15171111
15171110
15171110
15171111
15171111
15171111
15171111
15171110
15171111
15171111
15171111
15171110
15171111
15171111
15171111
15171111
15171111
15171111
15171111
15171111
15171111
15171110
15171111
15171111
15171110
15171110
15171110
15171110
15171111
15171110
15171111
15171111
15171110
15171111
15171111
15171110
15171110
15171110
15171111
15171111
15171111
15171111
15171110
15171110
15171110
15171110
15171111
15171110
15171110
15171111
15171111
15171111
15171110
15171111
15171110
15171111
15171111
15171110
15171111
15171111
15171111
15171111
15171111
15171110
15171111
15171111
15171110
15171111
15171111
15171111
15171110
15171110
15171111
15171111
15171110
15171111
15171110
15171110
15171111
15171111
15171110

Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997770
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 25600 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.046
1024 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.144
Truncate #1 on 25600 points by 12 bits
HomBN #2 via element-wise mult on 25600 points
[31m2 ==> -54451695828[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #2 on 256 points by 12 bits
Time in sec for current matmul = 0.054
-236547054 => -40850415630
[31mMatMul Output Mismatch[0m
Relu #3 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.143
Truncate #3 on 25600 points by 12 bits
HomBN #3 via element-wise mult on 25600 points
[31m2 ==> -51163361492[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #4 on 256 points by 12 bits
Time in sec for current matmul = 0.052
508006424 => 23742533168
[31mMatMul Output Mismatch[0m
Relu #5 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.144
Truncate #5 on 25600 points by 12 bits
HomBN #4 via element-wise mult on 25600 points
[31m2 ==> -6267531476[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #6 on 256 points by 12 bits
Time in sec for current matmul = 0.052
377806272 => 61291149779
[31mMatMul Output Mismatch[0m
Relu #7 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.144
Thread i = 0, total data sent till now = 8410530
Thread i = 1, total data sent till now = 2621063
Thread i = 2, total data sent till now = 1897023
Thread i = 3, total data sent till now = 2621063
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 2773059 microseconds.
Total data sent = 7.98528 MiB.
Number of rounds = 151
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 0.204 seconds.
Total time in BatchNorm = 0.655 seconds.
Total time in Truncation = 1.18 seconds.
Total time in Relu = 0.575 seconds.
Total time in MaxPool = 0 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 0.952515 MiB.
BatchNorm data sent = 5.00031 MiB.
Truncation data sent = 2.00414 MiB.
Relu data sent = 0.0283203 MiB.
Maxpool data sent = 0 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
14963661
14963661
14963660
14963660
14963660
14963661
14963661
14963660
14963660
14963661
14963661
14963660
14963660
14963660
14963661
14963660
14963660
14963661
14963661
14963661
14963661
14963660
14963660
14963661
14963661
14963661
14963661
14963661
14963660
14963661
14963661
14963661
14963661
14963661
14963660
14963661
14963661
14963661
14963661
14963660
14963661
14963661
14963660
14963660
14963661
14963660
14963661
14963660
14963661
14963661
14963661
14963661
14963660
14963661
14963661
14963661
14963661
14963660
14963660
14963661
14963661
14963660
14963661
14963660
14963661
14963660
14963661
14963661
14963661
14963660
14963661
14963661
14963661
14963661
14963661
14963661
14963661
14963660
14963660
14963661
14963661
14963661
14963661
14963660
14963661
14963660
14963661
14963660
14963661
14963661
14963661
14963660
14963660
14963661
14963660
14963661
14963661
14963661
14963661
14963661
14963661
14963661
14963661
14963661
14963660
14963660
14963661
14963661
14963661
14963660
14963661
14963660
14963661
14963661
14963661
14963661
14963660
14963661
14963661
14963661
14963660
14963660
14963661
14963660
14963660
14963661
14963661
14963660
14963661
14963660
14963660
14963660
14963660
14963660
14963661
14963661
14963661
14963661
14963661
14963661
14963661
14963661
14963661
14963661
14963661
14963660
14963661
14963661
14963660
14963661
14963660
14963661
14963660
14963660
14963661
14963661
14963660
14963661
14963661
14963661
14963661
14963661
14963660
14963660
14963660
14963661
14963661
14963661
14963661
14963661
14963661
14963660
14963660
14963661
14963660
14963660
14963661
14963661
14963660
14963660
14963661
14963660
14963660
14963661
14963661
14963661
14963660
14963661
14963660
14963660
14963660
14963660
14963661
14963661
14963661
14963661
14963661
14963660
14963661
14963661
14963661
14963660
14963660
14963661
14963660
14963661
14963660
14963661
14963660
14963661
14963661
14963661
14963660
14963660
14963660
14963660
14963660
14963660
14963661
14963661
14963661
14963661
14963660
14963661
14963660
14963661
14963661
14963661
14963661
14963660
14963661
14963661
14963661
14963660
14963660
14963660
14963661
14963661
14963661
14963660
14963660
14963660
14963661
14963660
14963661
14963660
14963660
14963660
14963660
14963661
14963661
14963661
14963661
14963661
14963661
14963660

Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997779
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 7680 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Time in sec for current matmul = 0.019
1024 => 0
[31mMatMul Output Mismatch[0m
Relu #1 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.002
Truncate #1 on 7680 points by 12 bits
HomBN #2 via element-wise mult on 7680 points
[31m2 ==> -18246196900[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #2 on 256 points by 12 bits
Time in sec for current matmul = 0.02
117796956 => -63489020052
[31mMatMul Output Mismatch[0m
Relu #3 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.002
Time in sec for current matmul = 0.018
-512 => 37416633938
[31mMatMul Output Mismatch[0m
Relu #5 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.002
Truncate #3 on 7680 points by 12 bits
HomBN #3 via element-wise mult on 7680 points
[31m2 ==> 16314868060[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #4 on 256 points by 12 bits
Time in sec for current matmul = 0.02
-51576524 => -30880945428
[31mMatMul Output Mismatch[0m
Relu #7 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.002
Time in sec for current matmul = 0.029
-512 => 32487592002
[31mMatMul Output Mismatch[0m
Relu #9 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.002
Truncate #5 on 7680 points by 12 bits
HomBN #4 via element-wise mult on 7680 points
[31m2 ==> 66982060380[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #6 on 256 points by 12 bits
Time in sec for current matmul = 0.02
94280324 => -40998674408
[31mMatMul Output Mismatch[0m
Relu #11 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.002
Time in sec for current matmul = 0.018
-512 => -39646276842
[31mMatMul Output Mismatch[0m
Relu #13 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.002
Thread i = 0, total data sent till now = 5301321
Thread i = 1, total data sent till now = 2018687
Thread i = 2, total data sent till now = 1783671
Thread i = 3, total data sent till now = 2018687
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 391107 microseconds.
Total data sent = 3.76305 MiB.
Number of rounds = 205
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 0.144 seconds.
Total time in BatchNorm = 0.079 seconds.
Total time in Truncation = 0.126 seconds.
Total time in Relu = 0.014 seconds.
Total time in MaxPool = 0 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 1.66698 MiB.
BatchNorm data sent = 1.42876 MiB.
Truncation data sent = 0.617752 MiB.
Relu data sent = 0.0495605 MiB.
Maxpool data sent = 0 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1

Using Eigen for Matmul
Doing BaseOT ...
using silent ot pack
using silent ot pack
using silent ot pack
using silent ot pack
After one-time setup, communication
Thread i = 0, total data sent till now = 1997707
Thread i = 1, total data sent till now = 1726247
Thread i = 2, total data sent till now = 1726247
Thread i = 3, total data sent till now = 1726247
-----------Syncronizing-----------
secret_share_mod: 137438953472 bitlength: 37
backend: Ring-SilentOT-Cheetah
-----------Syncronized - now starting execution-----------
HomBN #1 via element-wise mult on 2560 points
[31m4 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #1 on 256 points by 12 bits
Time in sec for current matmul = 0.022
512 => 61372154352
[31mMatMul Output Mismatch[0m
Relu #1 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.002
Relu #3 on 200 points, truncate=0 by 0 bits
Time in sec for current relu = 0.002
HomBN #2 via element-wise mult on 200 points
[31m3200 ==> 27089960237[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #2 on 200 points by 12 bits
HomBN #3 via element-wise mult on 51200 points
[31m13227518 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #3 on 256 points by 12 bits
Time in sec for current matmul = 0.018
7671519286 => 14404745710
[31mMatMul Output Mismatch[0m
Relu #5 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.002
Relu #7 on 200 points, truncate=0 by 0 bits
Time in sec for current relu = 0.002
HomBN #4 via element-wise mult on 200 points
[31m3200 ==> -39740064936[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #4 on 200 points by 12 bits
HomBN #5 via element-wise mult on 51200 points
[31m-19404330 ==> 0[0m
[31mElemWiseSecretVectorMult Output Mismatch[0m
Truncate #5 on 256 points by 12 bits
Time in sec for current matmul = 0.019
1800593224 => 2326306822
[31mMatMul Output Mismatch[0m
Relu #9 on 256 points, truncate=1 by 12 bits
Time in sec for current relu = 0.002
Thread i = 0, total data sent till now = 8184085
Thread i = 1, total data sent till now = 1753067
Thread i = 2, total data sent till now = 1732655
Thread i = 3, total data sent till now = 1754501
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
Total time taken = 283505 microseconds.
Total data sent = 5.95842 MiB.
Number of rounds = 147
Total comm (sent+received) = (see SERVER OUTPUT)
------------------------------------------------------
Total time in Conv = 0 seconds.
Total time in MatMul = 0.059 seconds.
Total time in BatchNorm = 0.185 seconds.
Total time in Truncation = 0.01 seconds.
Total time in Relu = 0.01 seconds.
Total time in MaxPool = 0 seconds.
Total time in AvgPool = 0 seconds.
Total time in ArgMax = 0 seconds.
Total time in MatAdd = 0 seconds.
Total time in MatAddBroadCast = 0 seconds.
Total time in MulCir = 0 seconds.
Total time in ScalarMul = 0 seconds.
Total time in Sigmoid = 0 seconds.
Total time in Tanh = 0 seconds.
Total time in Sqrt = 0 seconds.
Total time in NormaliseL2 = 0 seconds.
------------------------------------------------------
Conv data sent = 0 MiB.
MatMul data sent = 0.714495 MiB.
BatchNorm data sent = 5.17918 MiB.
Truncation data sent = 0.032135 MiB.
Relu data sent = 0.0326099 MiB.
Maxpool data sent = 0 MiB.
Avgpool data sent = 0 MiB.
ArgMax data sent = 0 MiB.
MatAdd data sent = 0 MiB.
MatAddBroadCast data sent = 0 MiB.
MulCir data sent = 0 MiB.
Sigmoid data sent = 0 MiB.
Tanh data sent = 0 MiB.
Sqrt data sent = 0 MiB.
NormaliseL2 data sent = 0 MiB.
------------------------------------------------------
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567948
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
567947
